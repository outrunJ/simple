{"version":3,"sources":["gulp"],"names":[],"mappings":"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","file":"gulp-compiled.js","sourcesContent":["#!/usr/bin/env node\n\n'use strict';\nvar gutil = require('gulp-util');\nvar prettyTime = require('pretty-hrtime');\nvar chalk = require('chalk');\nvar semver = require('semver');\nvar archy = require('archy');\nvar Liftoff = require('liftoff');\nvar tildify = require('tildify');\nvar interpret = require('interpret');\nvar v8flags = require('v8flags');\nvar completion = require('../lib/completion');\nvar argv = require('minimist')(process.argv.slice(2));\nvar taskTree = require('../lib/taskTree');\n\n// Set env var for ORIGINAL cwd\n// before anything touches it\nprocess.env.INIT_CWD = process.cwd();\n\nvar cli = new Liftoff({\n  name: 'gulp',\n  completions: completion,\n  extensions: interpret.jsVariants,\n  v8flags: v8flags,\n});\n\n// Exit with 0 or 1\nvar failed = false;\nprocess.once('exit', function(code) {\n  if (code === 0 && failed) {\n    process.exit(1);\n  }\n});\n\n// Parse those args m8\nvar cliPackage = require('../package');\nvar versionFlag = argv.v || argv.version;\nvar tasksFlag = argv.T || argv.tasks;\nvar tasks = argv._;\nvar toRun = tasks.length ? tasks : ['default'];\n\n// This is a hold-over until we have a better logging system\n// with log levels\nvar simpleTasksFlag = argv['tasks-simple'];\nvar shouldLog = !argv.silent && !simpleTasksFlag;\n\nif (!shouldLog) {\n  gutil.log = function() {};\n}\n\ncli.on('require', function(name) {\n  gutil.log('Requiring external module', chalk.magenta(name));\n});\n\ncli.on('requireFail', function(name) {\n  gutil.log(chalk.red('Failed to load external module'), chalk.magenta(name));\n});\n\ncli.on('respawn', function(flags, child) {\n  var nodeFlags = chalk.magenta(flags.join(', '));\n  var pid = chalk.magenta(child.pid);\n  gutil.log('Node flags detected:', nodeFlags);\n  gutil.log('Respawned to PID:', pid);\n});\n\ncli.launch({\n  cwd: argv.cwd,\n  configPath: argv.gulpfile,\n  require: argv.require,\n  completion: argv.completion,\n}, handleArguments);\n\n// The actual logic\nfunction handleArguments(env) {\n  if (versionFlag && tasks.length === 0) {\n    gutil.log('CLI version', cliPackage.version);\n    if (env.modulePackage && typeof env.modulePackage.version !== 'undefined') {\n      gutil.log('Local version', env.modulePackage.version);\n    }\n    process.exit(0);\n  }\n\n  if (!env.modulePath) {\n    gutil.log(\n      chalk.red('Local gulp not found in'),\n      chalk.magenta(tildify(env.cwd))\n    );\n    gutil.log(chalk.red('Try running: npm install gulp'));\n    process.exit(1);\n  }\n\n  if (!env.configPath) {\n    gutil.log(chalk.red('No gulpfile found'));\n    process.exit(1);\n  }\n\n  // Check for semver difference between cli and local installation\n  if (semver.gt(cliPackage.version, env.modulePackage.version)) {\n    gutil.log(chalk.red('Warning: gulp version mismatch:'));\n    gutil.log(chalk.red('Global gulp is', cliPackage.version));\n    gutil.log(chalk.red('Local gulp is', env.modulePackage.version));\n  }\n\n  // Chdir before requiring gulpfile to make sure\n  // we let them chdir as needed\n  if (process.cwd() !== env.cwd) {\n    process.chdir(env.cwd);\n    gutil.log(\n      'Working directory changed to',\n      chalk.magenta(tildify(env.cwd))\n    );\n  }\n\n  // This is what actually loads up the gulpfile\n  require(env.configPath);\n  gutil.log('Using gulpfile', chalk.magenta(tildify(env.configPath)));\n\n  var gulpInst = require(env.modulePath);\n  logEvents(gulpInst);\n\n  process.nextTick(function() {\n    if (simpleTasksFlag) {\n      return logTasksSimple(env, gulpInst);\n    }\n    if (tasksFlag) {\n      return logTasks(env, gulpInst);\n    }\n    gulpInst.start.apply(gulpInst, toRun);\n  });\n}\n\nfunction logTasks(env, localGulp) {\n  var tree = taskTree(localGulp.tasks);\n  tree.label = 'Tasks for ' + chalk.magenta(tildify(env.configPath));\n  archy(tree)\n    .split('\\n')\n    .forEach(function(v) {\n      if (v.trim().length === 0) {\n        return;\n      }\n      gutil.log(v);\n    });\n}\n\nfunction logTasksSimple(env, localGulp) {\n  console.log(Object.keys(localGulp.tasks)\n    .join('\\n')\n    .trim());\n}\n\n// Format orchestrator errors\nfunction formatError(e) {\n  if (!e.err) {\n    return e.message;\n  }\n\n  // PluginError\n  if (typeof e.err.showStack === 'boolean') {\n    return e.err.toString();\n  }\n\n  // Normal error\n  if (e.err.stack) {\n    return e.err.stack;\n  }\n\n  // Unknown (string, number, etc.)\n  return new Error(String(e.err)).stack;\n}\n\n// Wire up logging events\nfunction logEvents(gulpInst) {\n\n  // Total hack due to poor error management in orchestrator\n  gulpInst.on('err', function() {\n    failed = true;\n  });\n\n  gulpInst.on('task_start', function(e) {\n    // TODO: batch these\n    // so when 5 tasks start at once it only logs one time with all 5\n    gutil.log('Starting', '\\'' + chalk.cyan(e.task) + '\\'...');\n  });\n\n  gulpInst.on('task_stop', function(e) {\n    var time = prettyTime(e.hrDuration);\n    gutil.log(\n      'Finished', '\\'' + chalk.cyan(e.task) + '\\'',\n      'after', chalk.magenta(time)\n    );\n  });\n\n  gulpInst.on('task_err', function(e) {\n    var msg = formatError(e);\n    var time = prettyTime(e.hrDuration);\n    gutil.log(\n      '\\'' + chalk.cyan(e.task) + '\\'',\n      chalk.red('errored after'),\n      chalk.magenta(time)\n    );\n    gutil.log(msg);\n  });\n\n  gulpInst.on('task_not_found', function(err) {\n    gutil.log(\n      chalk.red('Task \\'' + err.task + '\\' is not in your gulpfile')\n    );\n    gutil.log('Please check the documentation for proper gulpfile formatting');\n    process.exit(1);\n  });\n}\n"]}