{"version":3,"sources":["test.js"],"names":[],"mappings":";;AAAA,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAA;AAC1B,IAAI,KAAK,GAAG,OAAO,CAAC,IAAI,CAAC,CAAA;AACzB,IAAI,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC,CAAA;;AAEtB,IAAI,CAAC,MAAM,EAAE,UAAS,CAAC,EAAE;AACvB,SAAO,CAAC,CAAC,EAAE,EAAE,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAA;AACnC,GAAC,CAAC,GAAG,EAAE,CAAA;CACR,CAAC,CAAA;;AAEF,IAAI,CAAC,WAAW,EAAE,UAAS,CAAC,EAAE;AAC5B,SAAO,CAAC,CAAC,EAAE,EAAE,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAA;AAClC,GAAC,CAAC,GAAG,EAAE,CAAA;CACR,CAAC,CAAA;;AAEF,SAAS,OAAO,CAAC,CAAC,EAAE,IAAI,EAAE;AACxB,MAAI,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,CAAA;;AAEtB,GAAC,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,EAAE,4BAA4B,CAAC,CAAA;AACrD,GAAC,CAAC,EAAE,CAAC,IAAI,YAAY,EAAE,CAAC,KAAK,EAAE,wBAAwB,CAAC,CAAA;AACxD,GAAC,CAAC,EAAE,CAAC,IAAI,YAAY,EAAE,CAAC,KAAK,EAAE,oBAAoB,CAAC,CAEnD,CAAC,aAAa,EACb,QAAQ,EACR,eAAe,EACf,mBAAmB,EACnB,gBAAgB,EAChB,QAAQ,EACR,UAAU,CACX,CAAC,OAAO,CAAC,UAAS,MAAM,EAAE;AACzB,KAAC,CAAC,KAAK,CACH,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EACvB,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EACvB,uBAAuB,GAAG,MAAM,GAAG,IAAI,CAC1C,CAAA;GACF,CAAC,CAAA;CACH","file":"test-compiled.js","sourcesContent":["var test = require('tape')\nvar clone = require('./')\nvar fs = require('fs')\n\ntest('file', function(t) {\n  compare(t, fs.statSync(__filename))\n  t.end()\n})\n\ntest('directory', function(t) {\n  compare(t, fs.statSync(__dirname))\n  t.end()\n})\n\nfunction compare(t, stat) {\n  var copy = clone(stat)\n\n  t.deepEqual(stat, copy, 'clone has equal properties')\n  t.ok(stat instanceof fs.Stats, 'original is an fs.Stat')\n  t.ok(copy instanceof fs.Stats, 'copy is an fs.Stat')\n\n  ;['isDirectory'\n  , 'isFile'\n  , 'isBlockDevice'\n  , 'isCharacterDevice'\n  , 'isSymbolicLink'\n  , 'isFIFO'\n  , 'isSocket'\n  ].forEach(function(method) {\n    t.equal(\n        stat[method].call(stat)\n      , copy[method].call(copy)\n      , 'equal value for stat.' + method + '()'\n    )\n  })\n}\n"]}