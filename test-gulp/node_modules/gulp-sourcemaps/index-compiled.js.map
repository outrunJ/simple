{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["'use strict';\nvar through = require('through2');\nvar fs = require('graceful-fs');\nvar path = require('path');\nvar File = require('vinyl');\nvar convert = require('convert-source-map');\nvar stripBom = require('strip-bom');\n\nvar PLUGIN_NAME = 'gulp-sourcemap';\nvar urlRegex = /^(https?|webpack(-[^:]+)?):\\/\\//;\n\n/**\n * Initialize source mapping chain\n */\nmodule.exports.init = function init(options) {\n  function sourceMapInit(file, encoding, callback) {\n    /*jshint validthis:true */\n\n    // pass through if file is null or already has a source map\n    if (file.isNull() || file.sourceMap) {\n      this.push(file);\n      return callback();\n    }\n\n    if (file.isStream()) {\n      return callback(new Error(PLUGIN_NAME + '-init: Streaming not supported'));\n    }\n\n    var fileContent = file.contents.toString();\n    var sourceMap;\n\n    if (options && options.loadMaps) {\n      var sourcePath = ''; //root path for the sources in the map\n\n      // Try to read inline source map\n      sourceMap = convert.fromSource(fileContent);\n      if (sourceMap) {\n        sourceMap = sourceMap.toObject();\n        // sources in map are relative to the source file\n        sourcePath = path.dirname(file.path);\n        fileContent = convert.removeComments(fileContent);\n      } else {\n        // look for source map comment referencing a source map file\n        var mapComment = convert.mapFileCommentRegex.exec(fileContent);\n\n        var mapFile;\n        if (mapComment) {\n          mapFile = path.resolve(path.dirname(file.path), mapComment[1] || mapComment[2]);\n          fileContent = convert.removeMapFileComments(fileContent);\n        // if no comment try map file with same name as source file\n        } else {\n          mapFile = file.path + '.map';\n        }\n\n        // sources in external map are relative to map file\n        sourcePath = path.dirname(mapFile);\n\n        try {\n          sourceMap = JSON.parse(stripBom(fs.readFileSync(mapFile, 'utf8')));\n        } catch(e) {}\n      }\n\n      // fix source paths and sourceContent for imported source map\n      if (sourceMap) {\n        sourceMap.sourcesContent = sourceMap.sourcesContent || [];\n        sourceMap.sources.forEach(function(source, i) {\n          if (source.match(urlRegex)) {\n            sourceMap.sourcesContent[i] = sourceMap.sourcesContent[i] || null;\n            return;\n          }\n          var absPath = path.resolve(sourcePath, source);\n          sourceMap.sources[i] = unixStylePath(path.relative(file.base, absPath));\n\n          if (!sourceMap.sourcesContent[i]) {\n            var sourceContent = null;\n            if (sourceMap.sourceRoot) {\n              if (sourceMap.sourceRoot.match(urlRegex)) {\n                sourceMap.sourcesContent[i] = null;\n                return;\n              }\n              absPath = path.resolve(sourcePath, sourceMap.sourceRoot, source);\n            }\n\n            // if current file: use content\n            if (absPath === file.path) {\n              sourceContent = fileContent;\n\n            // else load content from file\n            } else {\n              try {\n                if (options.debug)\n                  console.log(PLUGIN_NAME + '-init: No source content for \"' + source + '\". Loading from file.');\n                sourceContent = stripBom(fs.readFileSync(absPath, 'utf8'));\n              } catch (e) {\n                if (options.debug)\n                  console.warn(PLUGIN_NAME + '-init: source file not found: ' + absPath);\n              }\n            }\n            sourceMap.sourcesContent[i] = sourceContent;\n          }\n        });\n\n        // remove source map comment from source\n        file.contents = new Buffer(fileContent, 'utf8');\n      }\n    }\n\n    if (!sourceMap) {\n      // Make an empty source map\n      sourceMap = {\n        version : 3,\n        names: [],\n        mappings: '',\n        sources: [unixStylePath(file.relative)],\n        sourcesContent: [fileContent]\n      };\n    }\n\n    sourceMap.file = unixStylePath(file.relative);\n    file.sourceMap = sourceMap;\n\n    this.push(file);\n    callback();\n  }\n\n  return through.obj(sourceMapInit);\n};\n\n/**\n * Write the source map\n *\n * @param options options to change the way the source map is written\n *\n */\nmodule.exports.write = function write(destPath, options) {\n  if (options === undefined && Object.prototype.toString.call(destPath) === '[object Object]') {\n    options = destPath;\n    destPath = undefined;\n  }\n  options = options || {};\n\n  // set defaults for options if unset\n  if (options.includeContent === undefined)\n    options.includeContent = true;\n  if (options.addComment === undefined)\n    options.addComment = true;\n\n  function sourceMapWrite(file, encoding, callback) {\n    /*jshint validthis:true */\n\n    if (file.isNull() || !file.sourceMap) {\n      this.push(file);\n      return callback();\n    }\n\n    if (file.isStream()) {\n      return callback(new Error(PLUGIN_NAME + '-write: Streaming not supported'));\n    }\n\n    var sourceMap = file.sourceMap;\n    // fix paths if Windows style paths\n    sourceMap.file = unixStylePath(file.relative);\n    sourceMap.sources = sourceMap.sources.map(function(filePath) {\n      return unixStylePath(filePath);\n    });\n\n    if (typeof options.sourceRoot === 'function') {\n      sourceMap.sourceRoot = options.sourceRoot(file);\n    } else {\n      sourceMap.sourceRoot = options.sourceRoot;\n    }\n\n    if (options.includeContent) {\n      sourceMap.sourcesContent = sourceMap.sourcesContent || [];\n\n      // load missing source content\n      for (var i = 0; i < file.sourceMap.sources.length; i++) {\n        if (!sourceMap.sourcesContent[i]) {\n          var sourcePath = path.resolve(sourceMap.sourceRoot || file.base, sourceMap.sources[i]);\n          try {\n            if (options.debug)\n              console.log(PLUGIN_NAME + '-write: No source content for \"' + sourceMap.sources[i] + '\". Loading from file.');\n            sourceMap.sourcesContent[i] = stripBom(fs.readFileSync(sourcePath, 'utf8'));\n          } catch (e) {\n            if (options.debug)\n              console.warn(PLUGIN_NAME + '-write: source file not found: ' + sourcePath);\n          }\n        }\n      }\n      if (sourceMap.sourceRoot === undefined) {\n        sourceMap.sourceRoot = '/source/';\n      } else if (sourceMap.sourceRoot === null) {\n        sourceMap.sourceRoot = undefined;\n      }\n    } else {\n      delete sourceMap.sourcesContent;\n    }\n\n    var extension = file.relative.split('.').pop();\n    var commentFormatter;\n\n    switch (extension) {\n      case 'css':\n        commentFormatter = function(url) { return \"\\n/*# sourceMappingURL=\" + url + \" */\\n\"; };\n        break;\n      case 'js':\n        commentFormatter = function(url) { return \"\\n//# sourceMappingURL=\" + url + \"\\n\"; };\n        break;\n      default:\n        commentFormatter = function(url) { return \"\"; };\n    }\n\n    var comment, sourceMappingURLPrefix;\n    if (!destPath) {\n      // encode source map into comment\n      var base64Map = new Buffer(JSON.stringify(sourceMap)).toString('base64');\n      comment = commentFormatter('data:application/json;base64,' + base64Map);\n    } else {\n      var sourceMapPath = path.join(file.base, destPath, file.relative) + '.map';\n      // add new source map file to stream\n      var sourceMapFile = new File({\n        cwd: file.cwd,\n        base: file.base,\n        path: sourceMapPath,\n        contents: new Buffer(JSON.stringify(sourceMap)),\n        stat: {\n          isFile: function () { return true; },\n          isDirectory: function () { return false; },\n          isBlockDevice: function () { return false; },\n          isCharacterDevice: function () { return false; },\n          isSymbolicLink: function () { return false; },\n          isFIFO: function () { return false; },\n          isSocket: function () { return false; }\n        }\n      });\n      this.push(sourceMapFile);\n\n      var sourceMapPathRelative = path.relative(path.dirname(file.path), sourceMapPath);\n\n      if (options.sourceMappingURLPrefix) {\n        var prefix = '';\n        if (typeof options.sourceMappingURLPrefix === 'function') {\n          prefix = options.sourceMappingURLPrefix(file);\n        } else {\n          prefix = options.sourceMappingURLPrefix;\n        }\n        sourceMapPathRelative = prefix+path.join('/', sourceMapPathRelative);\n      }\n      comment = commentFormatter(unixStylePath(sourceMapPathRelative));\n\n      if (options.sourceMappingURL && typeof options.sourceMappingURL === 'function') {\n        comment = commentFormatter(options.sourceMappingURL(file));\n      }\n    }\n\n    // append source map comment\n    if (options.addComment)\n      file.contents = Buffer.concat([file.contents, new Buffer(comment)]);\n\n    this.push(file);\n    callback();\n  }\n\n  return through.obj(sourceMapWrite);\n};\n\nfunction unixStylePath(filePath) {\n  return filePath.split(path.sep).join('/');\n}\n"]}