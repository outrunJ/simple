{"version":3,"sources":["index.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC3B,IAAI,YAAY,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC;AAC3C,IAAI,KAAK,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC;AACjC,IAAI,UAAU,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;AACvC,IAAI,GAAG,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;;AAE9B,SAAS,IAAI,GAAG;AACd,cAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;CACzB;AACD,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;;AAElC,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC;AACzC,IAAI,CAAC,SAAS,CAAC,GAAG,GAAG,YAAW;;;;;AAK9B,MAAI,KAAK,GAAG,SAAS,CAAC,MAAM,GAAG,SAAS,GAAG,CAAC,SAAS,CAAC,CAAC;;AAEvD,MAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;CAC/B,CAAC;;AAEF,IAAI,CAAC,SAAS,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC;AAC7B,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;AAC/B,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,UAAS,IAAI,EAAE,GAAG,EAAE,EAAE,EAAE;AAC7C,MAAI,OAAO,GAAG,KAAK,UAAU,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;AACnD,MAAE,GAAG,GAAG,CAAC;AACT,OAAG,GAAG,IAAI,CAAC;GACZ;;;AAAA,AAGD,MAAI,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE;AACrB,WAAO,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,GAAG,EAAE,CAAA,YAAW;AACrC,UAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;KAC5B,CAAA,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;GACf;;AAED,SAAO,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;CACjC;;;AAAC,AAGF,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,IAAI;;;AAAC,AAG3B,UAAU,CAAC,KAAK,CAAC,gCAAgC,GAC/C,mCAAmC,GACnC,uCAAuC,EACvC,OAAO,CAAC,IAAI,EACZ,IAAI,CAAC,SAAS,EACd,KAAK,EACL,KAAK,CAAC,GAAG,CACV,CAAC;;AAEF,IAAI,CAAC,SAAS,CAAC,GAAG,GAAG,UAAU,CAAC,MAAM,CAAC,kCAAkC,GACvE,8DAA8D,EAC9D,OAAO,CAAC,IAAI,EACZ,IAAI,CAAC,SAAS,CAAC,GAAG,CACnB,CAAC;;AAEF,IAAI,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;AACtB,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC","file":"index-compiled.js","sourcesContent":["'use strict';\n\nvar util = require('util');\nvar Orchestrator = require('orchestrator');\nvar gutil = require('gulp-util');\nvar deprecated = require('deprecated');\nvar vfs = require('vinyl-fs');\n\nfunction Gulp() {\n  Orchestrator.call(this);\n}\nutil.inherits(Gulp, Orchestrator);\n\nGulp.prototype.task = Gulp.prototype.add;\nGulp.prototype.run = function() {\n  // `run()` is deprecated as of 3.5 and will be removed in 4.0\n  // Use task dependencies instead\n\n  // Impose our opinion of \"default\" tasks onto orchestrator\n  var tasks = arguments.length ? arguments : ['default'];\n\n  this.start.apply(this, tasks);\n};\n\nGulp.prototype.src = vfs.src;\nGulp.prototype.dest = vfs.dest;\nGulp.prototype.watch = function(glob, opt, fn) {\n  if (typeof opt === 'function' || Array.isArray(opt)) {\n    fn = opt;\n    opt = null;\n  }\n\n  // Array of tasks given\n  if (Array.isArray(fn)) {\n    return vfs.watch(glob, opt, function() {\n      this.start.apply(this, fn);\n    }.bind(this));\n  }\n\n  return vfs.watch(glob, opt, fn);\n};\n\n// Let people use this class from our instance\nGulp.prototype.Gulp = Gulp;\n\n// Deprecations\ndeprecated.field('gulp.env has been deprecated. ' +\n  'Use your own CLI parser instead. ' +\n  'We recommend using yargs or minimist.',\n  console.warn,\n  Gulp.prototype,\n  'env',\n  gutil.env\n);\n\nGulp.prototype.run = deprecated.method('gulp.run() has been deprecated. ' +\n  'Use task dependencies or gulp.watch task triggering instead.',\n  console.warn,\n  Gulp.prototype.run\n);\n\nvar inst = new Gulp();\nmodule.exports = inst;\n"]}