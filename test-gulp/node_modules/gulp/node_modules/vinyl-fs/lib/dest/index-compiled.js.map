{"version":3,"sources":["index.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,IAAI,QAAQ,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;AACnC,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC3B,IAAI,QAAQ,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;AACnC,IAAI,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC/B,IAAI,EAAE,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;;AAEhC,IAAI,aAAa,GAAG,OAAO,CAAC,iBAAiB,CAAC,CAAC;;AAG/C,SAAS,IAAI,CAAC,SAAS,EAAE,GAAG,EAAE;AAC5B,KAAG,GAAG,GAAG,IAAI,EAAE,CAAC;AAChB,MAAI,OAAO,SAAS,KAAK,QAAQ,IAAI,OAAO,SAAS,KAAK,UAAU,EAAE;AACpE,UAAM,IAAI,KAAK,CAAC,uBAAuB,CAAC,CAAC;GAC1C;;AAED,MAAI,OAAO,GAAG,QAAQ,CAAC,GAAG,EAAE;AAC1B,OAAG,EAAE,OAAO,CAAC,GAAG,EAAE;GACnB,CAAC,CAAC;;AAEH,MAAI,OAAO,OAAO,CAAC,IAAI,KAAK,QAAQ,EAAE;AACpC,WAAO,CAAC,IAAI,GAAG,QAAQ,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;GAC1C;;AAED,MAAI,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;;AAEpC,WAAS,QAAQ,CAAE,IAAI,EAAE,GAAG,EAAE,EAAE,EAAE;AAChC,QAAI,QAAQ,CAAC;AACb,QAAI,OAAO,SAAS,KAAK,QAAQ,EAAE;AACjC,cAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC;KACzC;AACD,QAAI,OAAO,SAAS,KAAK,UAAU,EAAE;AACnC,cAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;KAC/C;AACD,QAAI,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;AACtD,QAAI,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC;;;AAAC,AAG1C,QAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,EAAE,CAAC,KAAK,EAAE,CAAC;AACnD,QAAI,CAAC,IAAI,CAAC,IAAI,GAAI,OAAO,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,AAAC,CAAC;AAClD,QAAI,CAAC,GAAG,GAAG,GAAG,CAAC;AACf,QAAI,CAAC,IAAI,GAAG,QAAQ,CAAC;AACrB,QAAI,CAAC,IAAI,GAAG,SAAS;;;AAAC,AAGtB,UAAM,CAAC,WAAW,EAAE,UAAS,GAAG,EAAC;AAC/B,UAAI,GAAG,EAAE;AACP,eAAO,EAAE,CAAC,GAAG,CAAC,CAAC;OAChB;AACD,mBAAa,CAAC,SAAS,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC;KACpC,CAAC,CAAC;GACJ;;AAED,MAAI,MAAM,GAAG,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC;;AAAC,AAEpC,QAAM,CAAC,MAAM,EAAE,CAAC;AAChB,SAAO,MAAM,CAAC;CACf;;AAED,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC","file":"index-compiled.js","sourcesContent":["'use strict';\n\nvar defaults = require('defaults');\nvar path = require('path');\nvar through2 = require('through2');\nvar mkdirp = require('mkdirp');\nvar fs = require('graceful-fs');\n\nvar writeContents = require('./writeContents');\n\n\nfunction dest(outFolder, opt) {\n  opt = opt || {};\n  if (typeof outFolder !== 'string' && typeof outFolder !== 'function') {\n    throw new Error('Invalid output folder');\n  }\n\n  var options = defaults(opt, {\n    cwd: process.cwd()\n  });\n\n  if (typeof options.mode === 'string') {\n    options.mode = parseInt(options.mode, 8);\n  }\n\n  var cwd = path.resolve(options.cwd);\n\n  function saveFile (file, enc, cb) {\n    var basePath;\n    if (typeof outFolder === 'string') {\n      basePath = path.resolve(cwd, outFolder);\n    }\n    if (typeof outFolder === 'function') {\n      basePath = path.resolve(cwd, outFolder(file));\n    }\n    var writePath = path.resolve(basePath, file.relative);\n    var writeFolder = path.dirname(writePath);\n\n    // wire up new properties\n    file.stat = file.stat ? file.stat : new fs.Stats();\n    file.stat.mode = (options.mode || file.stat.mode);\n    file.cwd = cwd;\n    file.base = basePath;\n    file.path = writePath;\n\n    // mkdirp the folder the file is going in\n    mkdirp(writeFolder, function(err){\n      if (err) {\n        return cb(err);\n      }\n      writeContents(writePath, file, cb);\n    });\n  }\n\n  var stream = through2.obj(saveFile);\n  // TODO: option for either backpressure or lossy\n  stream.resume();\n  return stream;\n}\n\nmodule.exports = dest;\n"]}