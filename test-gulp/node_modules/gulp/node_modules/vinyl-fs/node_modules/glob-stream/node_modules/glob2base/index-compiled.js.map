{"version":3,"sources":["index.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC3B,IAAI,SAAS,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;;AAEtC,IAAI,WAAW,GAAG,SAAd,WAAW,CAAY,GAAG,EAAC;AAC7B,MAAI,GAAG,GAAG,EAAE,CAAC;AACb,MAAI,IAAI,GAAG,IAAI,CAAC;AAChB,OAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAClC,QAAI,OAAO,GAAG,CAAC,CAAC,CAAC,KAAK,QAAQ,EAAE;AAC9B,UAAI,GAAG,KAAK,CAAC;AACb,YAAM;KACP;AACD,OAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;GAClB;;;;AAAA,AAID,MAAI,IAAI,EAAE;AACR,OAAG,CAAC,GAAG,EAAE,CAAC;GACX;AACD,SAAO,GAAG,CAAC;CACZ,CAAC;;AAEF,IAAI,gBAAgB,GAAG,SAAnB,gBAAgB,CAAY,GAAG,EAAE;AACnC,MAAI,KAAK,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;AACnB,MAAI,SAAS,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;;;AAAC,AAG7B,MAAI,GAAG,GAAG,SAAS,CAAC,KAAK,EAAE,UAAS,CAAC,EAAE,GAAG,EAAC;AACzC,QAAI,OAAO,CAAC,KAAK,QAAQ,EAAE;AACzB,aAAO,IAAI,CAAC;KACb;;AAED,QAAI,OAAO,GAAG,SAAS,CAAC,KAAK,CAAC,UAAS,GAAG,EAAC;AACzC,aAAO,CAAC,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC;KACvB,CAAC,CAAC;;AAEH,WAAO,CAAC,OAAO,CAAC;GACjB,CAAC,CAAC;;AAEH,SAAO,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;CAC5B,CAAC;;AAEF,IAAI,SAAS,GAAG,SAAZ,SAAS,CAAY,GAAG,EAAE;;AAE5B,MAAI,GAAG,CAAC,MAAM,IAAI,CAAC,EAAE;AACnB,WAAO,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;GAC5B;;AAAA,AAED,SAAO,gBAAgB,CAAC,GAAG,CAAC,CAAC;CAC9B,CAAC;;AAEF,MAAM,CAAC,OAAO,GAAG,UAAS,IAAI,EAAE;AAC9B,MAAI,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC;AAC7B,MAAI,SAAS,GAAG,SAAS,CAAC,GAAG,CAAC,CAAC;AAC/B,MAAI,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAC,IAAI,CAAC,GAAG,CAAC;AACjE,SAAO,QAAQ,CAAC;CACjB,CAAC","file":"index-compiled.js","sourcesContent":["'use strict';\n\nvar path = require('path');\nvar findIndex = require('find-index');\n\nvar flattenGlob = function(arr){\n  var out = [];\n  var flat = true;\n  for(var i = 0; i < arr.length; i++) {\n    if (typeof arr[i] !== 'string') {\n      flat = false;\n      break;\n    }\n    out.push(arr[i]);\n  }\n\n  // last one is a file or specific dir\n  // so we pop it off\n  if (flat) {\n    out.pop();\n  }\n  return out;\n};\n\nvar flattenExpansion = function(set) {\n  var first = set[0];\n  var toCompare = set.slice(1);\n\n  // find index where the diff is\n  var idx = findIndex(first, function(v, idx){\n    if (typeof v !== 'string') {\n      return true;\n    }\n\n    var matched = toCompare.every(function(arr){\n      return v === arr[idx];\n    });\n\n    return !matched;\n  });\n\n  return first.slice(0, idx);\n};\n\nvar setToBase = function(set) {\n  // normal something/*.js\n  if (set.length <= 1) {\n    return flattenGlob(set[0]);\n  }\n  // has expansion\n  return flattenExpansion(set);\n};\n\nmodule.exports = function(glob) {\n  var set = glob.minimatch.set;\n  var baseParts = setToBase(set);\n  var basePath = path.normalize(baseParts.join(path.sep))+path.sep;\n  return basePath;\n};\n"]}