{"version":3,"sources":["globule_test.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;;AAE3B,IAAI,OAAO,GAAG,OAAO,CAAC,mBAAmB,CAAC;;;;;;;;;;;;;;;;;;;;;;AAAC,AAsB3C,OAAO,CAAC,OAAO,CAAC,GAAG;AACjB,aAAW,EAAE,kBAAS,IAAI,EAAE;AAC1B,QAAI,CAAC,MAAM,CAAC,CAAC,CAAC;;AAAC,AAEf,QAAI,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,EAAE,QAAQ,CAAC,EAAE,EAAE,EAAE,0BAA0B,CAAC,CAAC;AAC9E,QAAI,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC,EAAE,EAAE,EAAE,0BAA0B,CAAC,CAAC;AAC5E,QAAI,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,EAAE,QAAQ,CAAC,EAAE,EAAE,EAAE,0BAA0B,CAAC,CAAC;AAC5E,QAAI,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,0BAA0B,CAAC,CAAC;AAC1E,QAAI,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,EAAE,EAAE,0BAA0B,CAAC,CAAC;AAChF,QAAI,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,EAAE,EAAE,EAAE,0BAA0B,CAAC,CAAC;AAC9E,QAAI,CAAC,IAAI,EAAE,CAAC;GACb;AACD,kBAAgB,EAAE,uBAAS,IAAI,EAAE;AAC/B,QAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AACf,QAAI,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,EAAE,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,EAAE,yBAAyB,CAAC,CAAC;AACvF,QAAI,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,QAAQ,CAAC,EAAE,yBAAyB,CAAC,CAAC;AACzF,QAAI,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC,EAAE,CAAC,QAAQ,CAAC,EAAE,yBAAyB,CAAC,CAAC;AACpG,QAAI,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,MAAM,EAAE,OAAO,CAAC,EAAE,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,EAAE,yBAAyB,CAAC,CAAC;AAClG,QAAI,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,MAAM,EAAE,OAAO,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,QAAQ,CAAC,EAAE,yBAAyB,CAAC,CAAC;AACpG,QAAI,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,MAAM,EAAE,OAAO,CAAC,EAAE,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC,EAAE,CAAC,QAAQ,EAAE,SAAS,CAAC,EAAE,yBAAyB,CAAC,CAAC;AAC1H,QAAI,CAAC,IAAI,EAAE,CAAC;GACb;AACD,cAAY,EAAE,mBAAS,IAAI,EAAE;AAC3B,QAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AACf,QAAI,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,EAAE,SAAS,CAAC,EAAE,EAAE,EAAE,uBAAuB,CAAC,CAAC;AAC9E,QAAI,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC,EAAE,EAAE,EAAE,uBAAuB,CAAC,CAAC;AAC3F,QAAI,CAAC,IAAI,EAAE,CAAC;GACb;AACD,UAAQ,EAAE,gBAAS,IAAI,EAAE;AACvB,QAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AACf,QAAI,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC,EAAE,CAAC,QAAQ,CAAC,EAAE,8BAA8B,CAAC,CAAC;AACxG,QAAI,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,MAAM,EAAE,KAAK,CAAC,EAAE,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC,EAAE,CAAC,QAAQ,CAAC,EAAE,8BAA8B,CAAC,CAAC;AACjH,QAAI,CAAC,IAAI,EAAE,CAAC;GACb;AACD,WAAS,EAAE,iBAAS,IAAI,EAAE;AACxB,QAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AACf,QAAI,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,EAAE,OAAO,CAAC,EAAE,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,EAAE,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC,EACvF,CAAC,QAAQ,EAAE,SAAS,CAAC,EACrB,iDAAiD,CAAC,CAAC;AACrD,QAAI,CAAC,IAAI,EAAE,CAAC;GACb;AACD,aAAW,EAAE,mBAAS,IAAI,EAAE;AAC1B,QAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AACf,QAAI,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC,EAAE,EAAE,EAAE,yCAAyC,CAAC,CAAC;AAC9G,QAAI,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,MAAM,EAAE,OAAO,CAAC,EAAE,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC,EAAE,EAAE,EAAE,+BAA+B,CAAC,CAAC;AAC5G,QAAI,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,MAAM,EAAE,QAAQ,CAAC,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC,EAC9E,CAAC,QAAQ,EAAE,QAAQ,CAAC,EACpB,iDAAiD,CAAC,CAAC;AACrD,QAAI,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,MAAM,EAAE,OAAO,EAAE,OAAO,CAAC,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC,EACtF,CAAC,QAAQ,EAAE,QAAQ,CAAC,EACpB,qCAAqC,CAAC,CAAC;AACzC,QAAI,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,MAAM,EAAE,QAAQ,EAAE,MAAM,CAAC,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC,EACtF,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC,EAC9B,qCAAqC,CAAC,CAAC;AACzC,QAAI,CAAC,IAAI,EAAE,CAAC;GACb;AACD,qBAAmB,EAAE,0BAAS,IAAI,EAAE;AAClC,QAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AACf,QAAI,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE,KAAK,EAAE,YAAY,CAAC,EAAE,EAAC,SAAS,EAAE,IAAI,EAAC,CAAC,EACtF,CAAC,QAAQ,EAAE,YAAY,CAAC,EACxB,8CAA8C,CAAC,CAAC;AAClD,QAAI,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE,KAAK,EAAE,YAAY,CAAC,CAAC,EACnE,CAAC,QAAQ,CAAC,EACV,8CAA8C,CAAC,CAAC;AAClD,QAAI,CAAC,IAAI,EAAE,CAAC;GACb;CACF,CAAC;;AAEF,OAAO,CAAC,SAAS,CAAC,GAAG;AACnB,kBAAgB,EAAE,uBAAS,IAAI,EAAE;AAC/B,QAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AACf,QAAI,CAAC,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,EAAE,QAAQ,CAAC,EAAE,yBAAyB,CAAC,CAAC;AACtE,QAAI,CAAC,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,yBAAyB,CAAC,CAAC;AACxE,QAAI,CAAC,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC,EAAE,yBAAyB,CAAC,CAAC;AACnF,QAAI,CAAC,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,OAAO,CAAC,EAAE,QAAQ,CAAC,EAAE,yBAAyB,CAAC,CAAC;AACjF,QAAI,CAAC,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,OAAO,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,yBAAyB,CAAC,CAAC;AACnF,QAAI,CAAC,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,OAAO,CAAC,EAAE,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC,EAAE,yBAAyB,CAAC,CAAC;AAC9F,QAAI,CAAC,IAAI,EAAE,CAAC;GACb;AACD,cAAY,EAAE,mBAAS,IAAI,EAAE;AAC3B,QAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AACf,QAAI,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,EAAE,SAAS,CAAC,EAAE,uBAAuB,CAAC,CAAC;AACtE,QAAI,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC,EAAE,uBAAuB,CAAC,CAAC;AACnF,QAAI,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE,SAAS,CAAC,EAAE,uBAAuB,CAAC,CAAC;AACpE,QAAI,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,EAAE,uBAAuB,CAAC,CAAC;AACjE,QAAI,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,EAAE,SAAS,CAAC,EAAE,uBAAuB,CAAC,CAAC;AAClE,QAAI,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE,uBAAuB,CAAC,CAAC;AAC/D,QAAI,CAAC,IAAI,EAAE,CAAC;GACb;AACD,qBAAmB,EAAE,0BAAS,IAAI,EAAE;AAClC,QAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AACf,QAAI,CAAC,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,YAAY,CAAC,EAAE,EAAC,SAAS,EAAE,IAAI,EAAC,CAAC,EAAE,8CAA8C,CAAC,CAAC;AACpH,QAAI,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,YAAY,CAAC,CAAC,EAAE,8CAA8C,CAAC,CAAC;AAClG,QAAI,CAAC,IAAI,EAAE,CAAC;GACb;CACF,CAAC;;AAEF,OAAO,CAAC,MAAM,CAAC,GAAG;AAChB,OAAK,EAAE,eAAS,IAAI,EAAE;AACpB,QAAI,CAAC,GAAG,GAAG,OAAO,CAAC,GAAG,EAAE,CAAC;AACzB,WAAO,CAAC,KAAK,CAAC,sBAAsB,CAAC,CAAC;AACtC,QAAI,EAAE,CAAC;GACR;AACD,UAAQ,EAAE,kBAAS,IAAI,EAAE;AACvB,WAAO,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACxB,QAAI,EAAE,CAAC;GACR;AACD,kBAAgB,EAAE,uBAAS,IAAI,EAAE;AAC/B,QAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AACf,QAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,WAAW,EAAE,WAAW,CAAC,EAAE,uCAAuC,CAAC,CAAC;AAC7G,QAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,EAAE,UAAU,CAAC,EAChD,CAAC,WAAW,EAAE,WAAW,EAAE,aAAa,EAAE,aAAa,CAAC,EACxD,0CAA0C,CAAC,CAAC;AAC9C,QAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC,EAClD,CAAC,WAAW,EAAE,WAAW,EAAE,aAAa,EAAE,aAAa,CAAC,EACxD,iCAAiC,CAAC,CAAC;AACrC,QAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,UAAU,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,EACnE,CAAC,WAAW,EAAE,WAAW,EAAE,aAAa,EAAE,aAAa,CAAC,EACxD,kDAAkD,CAAC,CAAC;AACtD,QAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE,EAAE,mCAAmC,CAAC,CAAC;AAC/E,QAAI,CAAC,IAAI,EAAE,CAAC;GACb;AACD,UAAQ,EAAE,gBAAS,IAAI,EAAE;AACvB,QAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AACf,QAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,EAAE,SAAS,CAAC,EAC/C,CAAC,WAAW,EAAE,WAAW,CAAC,EAC1B,6BAA6B,CAAC,CAAC;AACjC,QAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,EAAE,UAAU,EAAE,SAAS,CAAC,EAAE,CAAC,WAAW,EAAE,WAAW,EACtF,aAAa,EAAE,aAAa,CAAC,EAC7B,6BAA6B,CAAC,CAAC;AACjC,QAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,EACtC,CAAC,IAAI,EAAE,KAAK,CAAC,EACb,qEAAqE,CAAC,CAAC;AACzE,QAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,EAAC,IAAI,EAAE,IAAI,EAAC,CAAC,EACpD,CAAC,KAAK,CAAC,EACP,+EAA+E,CAAC,CAAC;AACnF,QAAI,CAAC,IAAI,EAAE,CAAC;GACb;AACD,cAAY,EAAE,mBAAS,IAAI,EAAE;AAC3B,QAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AACf,QAAI,MAAM,GAAG,OAAO,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;AAC3C,QAAI,QAAQ,GAAG,CAAC,aAAa,EAAE,aAAa,EAAE,WAAW,EAAE,WAAW,CAAC,CAAC;AACxE,QAAI,CAAC,SAAS,CAAC,MAAM,EAAE,QAAQ,EAAE,kDAAkD,CAAC,CAAC;;AAErF,UAAM,GAAG,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,WAAW,EAAE,eAAe,CAAC,CAAC;AACjE,YAAQ,GAAG,CAAC,WAAW,EAAE,WAAW,EAAE,aAAa,EAAE,aAAa,CAAC,CAAC;AACpE,QAAI,CAAC,SAAS,CAAC,MAAM,EAAE,QAAQ,EAAE,kEAAkE,CAAC,CAAC;;AAErG,UAAM,GAAG,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,WAAW,EAAE,eAAe,CAAC,CAAC;AACjE,YAAQ,GAAG,CAAC,WAAW,EAAE,WAAW,EAAE,aAAa,EAAE,aAAa,CAAC,CAAC;AACpE,QAAI,CAAC,SAAS,CAAC,MAAM,EAAE,QAAQ,EAAE,kEAAkE,CAAC,CAAC;;AAErG,UAAM,GAAG,OAAO,CAAC,IAAI,CAAC,eAAe,EAAE,cAAc,EAAE,aAAa,CAAC,CAAC;AACtE,YAAQ,GAAG,CAAC,aAAa,EAAE,WAAW,EAAE,WAAW,EAAE,aAAa,CAAC,CAAC;AACpE,QAAI,CAAC,SAAS,CAAC,MAAM,EAAE,QAAQ,EAAE,yEAAyE,CAAC,CAAC;;AAE5G,UAAM,GAAG,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,eAAe,EAAE,cAAc,EAAE,aAAa,CAAC,CAAC;AACnF,YAAQ,GAAG,CAAC,WAAW,EAAE,aAAa,EAAE,WAAW,EAAE,aAAa,CAAC,CAAC;AACpE,QAAI,CAAC,SAAS,CAAC,MAAM,EAAE,QAAQ,EAAE,yEAAyE,CAAC,CAAC;AAC5G,QAAI,CAAC,IAAI,EAAE,CAAC;GACb;AACD,aAAW,EAAE,mBAAS,IAAI,EAAE;AAC1B,QAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AACf,QAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,CAAC,EAAE,EAAE,EAAE,yCAAyC,CAAC,CAAC;AAC1F,QAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,WAAW,EAAC,YAAY,CAAC,CAAC,EAAE,EAAE,EAAE,+BAA+B,CAAC,CAAC;AAC9F,QAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,SAAS,EAAE,YAAY,CAAC,CAAC,EACpD,CAAC,WAAW,CAAC,EACb,0CAA0C,CAAC,CAAC;AAC9C,QAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC,EACpD,CAAC,WAAW,EAAE,WAAW,CAAC,EAC1B,qCAAqC,CAAC,CAAC;AACzC,QAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,SAAS,EAAE,UAAU,EAAE,YAAY,EAAE,cAAc,CAAC,CAAC,EAChF,CAAC,WAAW,EAAC,aAAa,CAAC,EAC3B,oDAAoD,CAAC,CAAC;AACxD,QAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,SAAS,EAAE,UAAU,EAAE,WAAW,CAAC,CAAC,EAC/D,CAAC,WAAW,EAAE,WAAW,CAAC,EAC1B,2DAA2D,CAAC,CAAC;AAC/D,QAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,WAAW,EAAE,WAAW,EAAE,aAAa,EAAE,aAAa,EAAE,UAAU,CAAC,CAAC,EAC/F,CAAC,WAAW,EAAE,aAAa,CAAC,EAC5B,mDAAmD,CAAC,CAAC;AACvD,QAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,WAAW,EAAE,UAAU,EAAE,WAAW,EAAE,aAAa,EAAE,aAAa,CAAC,CAAC,EAC/F,CAAC,WAAW,EAAE,aAAa,EAAE,aAAa,CAAC,EAC3C,qCAAqC,CAAC,CAAC;AACzC,QAAI,CAAC,IAAI,EAAE,CAAC;GACb;AACD,gBAAc,EAAE,qBAAS,IAAI,EAAE;AAC7B,QAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AACf,QAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CACtC,MAAM,EACN,eAAe,EACf,aAAa,EACb,wBAAwB,EACxB,qBAAqB,EACrB,iCAAiC,CAAC,EAAE,qCAAqC,CAAC,CAAC;AAC7E,QAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CACvC,OAAO,EACP,cAAc,EACd,sBAAsB,CAAC,EAAE,wEAAwE,CAAC,CAAC;AACrG,QAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,EAAE,EAAC,IAAI,EAAE,IAAI,EAAC,CAAC,EAAE,CACpD,OAAO,EACP,eAAe,EACf,cAAc,EACd,wBAAwB,EACxB,sBAAsB,EACtB,iCAAiC,CAAC,EAAE,2DAA2D,CAAC,CAAC;AACnG,QAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,EAAE,EAAC,IAAI,EAAE,IAAI,EAAC,CAAC,EAAE,CACrD,OAAO,EACP,cAAc,EACd,sBAAsB,CAAC,EAAE,8EAA8E,CAAC,CAAC;AAC3G,QAAI,CAAC,IAAI,EAAE,CAAC;GACb;AACD,kBAAgB,EAAE,uBAAS,IAAI,EAAE;AAC/B,QAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AACf,QAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,EAAE,EAAC,MAAM,EAAE,QAAQ,EAAC,CAAC,EAAE,CAC1D,eAAe,EACf,wBAAwB,EACxB,iCAAiC,CAClC,EAAE,0BAA0B,CAAC,CAAC;AAC/B,QAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,EAAE,EAAC,MAAM,EAAE,aAAa,EAAC,CAAC,EAAE,CAC/D,MAAM,EACN,aAAa,EACb,qBAAqB,CACtB,EAAE,gCAAgC,CAAC,CAAC;AACrC,QAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE;AAChC,mBAAa,EAAE,SAAS;AACxB,YAAM,EAAE,gBAAS,QAAQ,EAAE,OAAO,EAAE;AAClC,eAAO,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;OAC7C;KACF,CAAC,EAAE,CACF,qBAAqB,EACrB,iCAAiC,CAClC,EAAE,4BAA4B,CAAC,CAAC;AACjC,QAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,EAAC,MAAM,EAAE,QAAQ,EAAC,CAAC,EAAE,EAAE,EAAE,uBAAuB,CAAC,CAAC;AAC3F,QAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,EAAE,EAAC,MAAM,EAAE,aAAa,EAAC,CAAC,EAAE,EAAE,EAAE,uBAAuB,CAAC,CAAC;AAC9F,QAAI,CAAC,IAAI,EAAE,CAAC;GACb;AACD,qBAAmB,EAAE,0BAAS,IAAI,EAAE;AAClC,QAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AACf,QAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,8CAA8C,CAAC,CAAC;AACzF,QAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,EAAC,SAAS,EAAE,IAAI,EAAC,CAAC,EACpD,CAAC,WAAW,EAAE,WAAW,CAAC,EAC1B,yDAAyD,CAAC,CAAC;AAC7D,QAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,OAAO,EAAE,EAAC,SAAS,EAAE,IAAI,EAAC,CAAC,EAC7D,CAAC,WAAW,EAAE,WAAW,EAAE,aAAa,EAAE,aAAa,CAAC,EACxD,yDAAyD,CAAC,CAAC;AAC7D,QAAI,CAAC,IAAI,EAAE,CAAC;GACb;AACD,mBAAiB,EAAE,wBAAS,IAAI,EAAE;AAChC,QAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AACf,QAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,cAAc,CAAC,EAAE,EAAC,OAAO,EAAE,MAAM,EAAC,CAAC,EAC9D,CAAC,UAAU,EAAE,mBAAmB,EAAE,4BAA4B,CAAC,EAC/D,yDAAyD,CAAC,CAAC;AAC7D,QAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,cAAc,CAAC,EAAE,EAAC,GAAG,EAAE,MAAM,EAAC,CAAC,EAC1D,CAAC,UAAU,EAAE,mBAAmB,EAAE,4BAA4B,CAAC,EAC/D,2CAA2C,CAAC,CAAC;AAC/C,QAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,EAAE,EAAC,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAC,CAAC,EAC5E,CAAC,UAAU,EAAE,mBAAmB,EAAE,4BAA4B,CAAC,EAC/D,uCAAuC,CAAC,CAAC;AAC3C,QAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,EAAE,EAAC,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,aAAa,EAAC,CAAC,EACjF,CAAC,QAAQ,EAAE,gBAAgB,CAAC,EAC5B,uCAAuC,CAAC,CAAC;AAC3C,QAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,cAAc,EAAE,cAAc,CAAC,EAAE,EAAC,OAAO,EAAE,MAAM,EAAC,CAAC,EAC9E,CAAC,UAAU,EAAE,4BAA4B,CAAC,EAC1C,wCAAwC,CAAC,CAAC;AAC5C,QAAI,CAAC,IAAI,EAAE,CAAC;GACb;AACD,sBAAoB,EAAE,2BAAS,IAAI,EAAE;AACnC,QAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AACf,QAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,cAAc,CAAC,EAAE,EAAC,OAAO,EAAE,MAAM,EAAE,UAAU,EAAE,KAAK,EAAC,CAAC,EACjF,CAAC,UAAU,EAAE,mBAAmB,EAAE,4BAA4B,CAAC,EAC/D,8CAA8C,CAAC,CAAC;AAClD,QAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,cAAc,CAAC,EAAE,EAAC,OAAO,EAAE,MAAM,EAAE,UAAU,EAAE,IAAI,EAAC,CAAC,EAChF,CAAC,eAAe,EAAE,wBAAwB,EAAE,iCAAiC,CAAC,EAC9E,0CAA0C,CAAC,CAAC;AAC9C,QAAI,CAAC,IAAI,EAAE,CAAC;GACb;AACD,kBAAgB,EAAE,uBAAS,IAAI,EAAE;AAC/B,QAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AACf,QAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,EAAE,EAAC,MAAM,EAAE,IAAI,EAAC,CAAC,EACpD,CAAC,OAAO,CAAC,EACT,yDAAyD,CAAC,CAAC;AAC7D,QAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC,EAAE,EAAC,MAAM,EAAE,IAAI,EAAC,CAAC,EACtE,CAAC,OAAO,EAAE,WAAW,EAAE,OAAO,CAAC,EAC/B,yDAAyD,CAAC,CAAC;AAC7D,QAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,WAAW,EAAE,WAAW,EAAE,mBAAmB,CAAC,EAAE,EAAC,MAAM,EAAE,IAAI,EAAC,CAAC,EAC1F,CAAC,WAAW,EAAE,WAAW,EAAE,mBAAmB,CAAC,EAC/C,0DAA0D,CAAC,CAAC;AAC9D,QAAI,CAAC,IAAI,EAAE,CAAC;GACb;CACF,CAAC;;AAEF,OAAO,CAAC,SAAS,CAAC,GAAG;AACnB,iBAAe,EAAE,sBAAS,IAAI,EAAE;AAC9B,QAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;;AAEf,QAAI,MAAM,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC,CAAC;AAC1D,QAAI,QAAQ,GAAG,CACb,EAAC,IAAI,EAAE,OAAO,EAAE,GAAG,EAAE,CAAC,OAAO,CAAC,EAAC,EAC/B,EAAC,IAAI,EAAE,OAAO,EAAE,GAAG,EAAE,CAAC,OAAO,CAAC,EAAC,EAC/B,EAAC,IAAI,EAAE,OAAO,EAAE,GAAG,EAAE,CAAC,OAAO,CAAC,EAAC,CAChC,CAAC;AACF,QAAI,CAAC,SAAS,CAAC,MAAM,EAAE,QAAQ,EAAE,+DAA+D,CAAC,CAAC;;AAElG,QAAI,CAAC,IAAI,EAAE,CAAC;GACb;AACD,mBAAiB,EAAE,wBAAS,IAAI,EAAE;AAChC,QAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AACf,QAAI,MAAM,EAAE,QAAQ,CAAC;AACrB,UAAM,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,WAAW,EAAE,eAAe,CAAC,EAAE,EAAC,OAAO,EAAE,KAAK,EAAC,CAAC,CAAC;AACpF,YAAQ,GAAG,CACT,EAAC,IAAI,EAAE,OAAO,EAAE,GAAG,EAAE,CAAC,WAAW,CAAC,EAAC,EACnC,EAAC,IAAI,EAAE,WAAW,EAAE,GAAG,EAAE,CAAC,eAAe,CAAC,EAAC,EAC3C,EAAC,IAAI,EAAE,eAAe,EAAE,GAAG,EAAE,CAAC,mBAAmB,CAAC,EAAC,CACpD,CAAC;AACF,QAAI,CAAC,SAAS,CAAC,MAAM,EAAE,QAAQ,EAAE,0DAA0D,CAAC,CAAC;;AAE7F,UAAM,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,WAAW,EAAE,eAAe,CAAC,EAAE,EAAC,OAAO,EAAE,MAAM,EAAC,CAAC,CAAC;AACrF,QAAI,CAAC,SAAS,CAAC,MAAM,EAAE,QAAQ,EAAE,uDAAuD,CAAC,CAAC;;AAE1F,QAAI,CAAC,IAAI,EAAE,CAAC;GACb;AACD,oBAAkB,EAAE,yBAAS,IAAI,EAAE;AACjC,QAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AACf,QAAI,MAAM,EAAE,QAAQ,CAAC;;AAErB,UAAM,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,WAAW,EAAE,eAAe,CAAC,EAAE,EAAC,QAAQ,EAAE,MAAM,EAAC,CAAC,CAAC;AACtF,YAAQ,GAAG,CACT,EAAC,IAAI,EAAE,YAAY,EAAE,GAAG,EAAE,CAAC,OAAO,CAAC,EAAC,EACpC,EAAC,IAAI,EAAE,gBAAgB,EAAE,GAAG,EAAE,CAAC,WAAW,CAAC,EAAC,EAC5C,EAAC,IAAI,EAAE,oBAAoB,EAAE,GAAG,EAAE,CAAC,eAAe,CAAC,EAAC,CACrD,CAAC;AACF,QAAI,CAAC,SAAS,CAAC,MAAM,EAAE,QAAQ,EAAE,4DAA4D,CAAC,CAAC;;AAE/F,UAAM,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,WAAW,EAAE,eAAe,CAAC,EAAE,EAAC,QAAQ,EAAE,OAAO,EAAC,CAAC,CAAC;AACvF,QAAI,CAAC,SAAS,CAAC,MAAM,EAAE,QAAQ,EAAE,yDAAyD,CAAC,CAAC;;AAE5F,QAAI,CAAC,IAAI,EAAE,CAAC;GACb;AACD,mBAAiB,EAAE,wBAAS,IAAI,EAAE;AAChC,QAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AACf,QAAI,MAAM,EAAE,QAAQ,CAAC;;AAErB,UAAM,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,WAAW,EAAE,eAAe,CAAC,EAAE,EAAC,OAAO,EAAE,IAAI,EAAC,CAAC,CAAC;AACnF,YAAQ,GAAG,CACT,EAAC,IAAI,EAAE,OAAO,EAAE,GAAG,EAAE,CAAC,OAAO,CAAC,EAAC,EAC/B,EAAC,IAAI,EAAE,OAAO,EAAE,GAAG,EAAE,CAAC,WAAW,CAAC,EAAC,EACnC,EAAC,IAAI,EAAE,OAAO,EAAE,GAAG,EAAE,CAAC,eAAe,CAAC,EAAC,CACxC,CAAC;AACF,QAAI,CAAC,SAAS,CAAC,MAAM,EAAE,QAAQ,EAAE,qDAAqD,CAAC,CAAC;;AAExF,QAAI,CAAC,IAAI,EAAE,CAAC;GACb;AACD,sCAAoC,EAAE,uCAAS,IAAI,EAAE;AACnD,QAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AACf,QAAI,MAAM,EAAE,QAAQ,CAAC;;AAErB,UAAM,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,WAAW,EAAE,eAAe,CAAC,EAAE,EAAC,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,IAAI,EAAC,CAAC,CAAC;AACrG,YAAQ,GAAG,CACT,EAAC,IAAI,EAAE,YAAY,EAAE,GAAG,EAAE,CAAC,OAAO,CAAC,EAAC,EACpC,EAAC,IAAI,EAAE,YAAY,EAAE,GAAG,EAAE,CAAC,WAAW,CAAC,EAAC,EACxC,EAAC,IAAI,EAAE,YAAY,EAAE,GAAG,EAAE,CAAC,eAAe,CAAC,EAAC,CAC7C,CAAC;AACF,QAAI,CAAC,SAAS,CAAC,MAAM,EAAE,QAAQ,EAAE,4CAA4C,CAAC,CAAC;;AAE/E,QAAI,CAAC,IAAI,EAAE,CAAC;GACb;AACD,eAAa,EAAE,oBAAS,IAAI,EAAE;AAC5B,QAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AACf,QAAI,MAAM,EAAE,QAAQ,CAAC;;AAErB,UAAM,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,cAAc,EAAE,WAAW,CAAC,EAAE,EAAC,GAAG,EAAE,MAAM,EAAC,CAAC,CAAC;AACjF,YAAQ,GAAG,CACT,EAAC,IAAI,EAAE,SAAS,EAAE,GAAG,EAAE,CAAC,QAAQ,CAAC,EAAC,EAClC,EAAC,IAAI,EAAE,WAAW,EAAE,GAAG,EAAE,CAAC,cAAc,CAAC,EAAC,EAC1C,EAAC,IAAI,EAAE,eAAe,EAAE,GAAG,EAAE,CAAC,WAAW,CAAC,EAAC,CAC5C,CAAC;AACF,QAAI,CAAC,SAAS,CAAC,MAAM,EAAE,QAAQ,EAAE,gFAAgF,CAAC,CAAC;;AAEnH,QAAI,CAAC,IAAI,EAAE,CAAC;GACb;AACD,kBAAgB,EAAE,uBAAS,IAAI,EAAE;AAC/B,QAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AACf,QAAI,MAAM,EAAE,QAAQ,CAAC;;AAErB,UAAM,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,kBAAkB,EAAE,WAAW,CAAC,EAAE,EAAC,GAAG,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAC,CAAC,CAAC;AACtG,YAAQ,GAAG,CACT,EAAC,IAAI,EAAE,SAAS,EAAE,GAAG,EAAE,CAAC,QAAQ,CAAC,EAAC,EAClC,EAAC,IAAI,EAAE,WAAW,EAAE,GAAG,EAAE,CAAC,kBAAkB,CAAC,EAAC,EAC9C,EAAC,IAAI,EAAE,eAAe,EAAE,GAAG,EAAE,CAAC,WAAW,CAAC,EAAC,CAC5C,CAAC;AACF,QAAI,CAAC,SAAS,CAAC,MAAM,EAAE,QAAQ,EAAE,kFAAkF,CAAC,CAAC;;AAErH,UAAM,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,kBAAkB,EAAE,WAAW,CAAC,EAAE,EAAC,GAAG,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAC,CAAC,CAAC;AACrG,YAAQ,GAAG,CACT,EAAC,IAAI,EAAE,SAAS,EAAE,GAAG,EAAE,CAAC,QAAQ,CAAC,EAAC,EAClC,EAAC,IAAI,EAAE,mBAAmB,EAAE,GAAG,EAAE,CAAC,kBAAkB,CAAC,EAAC,EACtD,EAAC,IAAI,EAAE,eAAe,EAAE,GAAG,EAAE,CAAC,WAAW,CAAC,EAAC,CAC5C,CAAC;AACF,QAAI,CAAC,SAAS,CAAC,MAAM,EAAE,QAAQ,EAAE,gFAAgF,CAAC,CAAC;;AAEnH,QAAI,CAAC,IAAI,EAAE,CAAC;GACb;AACD,kBAAgB,EAAE,uBAAS,IAAI,EAAE;AAC/B,QAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AACf,QAAI,MAAM,EAAE,QAAQ,CAAC;AACrB,UAAM,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,WAAW,EAAE,eAAe,CAAC,EAAE;AAChE,mBAAa,EAAE,KAAK;AACpB,YAAM,EAAE,gBAAS,IAAI,EAAE,OAAO,EAAE;AAC9B,eAAO,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;OAC7D;KACF,CAAC,CAAC;AACH,YAAQ,GAAG,CACT,EAAC,IAAI,EAAE,WAAW,EAAE,GAAG,EAAE,CAAC,OAAO,CAAC,EAAC,EACnC,EAAC,IAAI,EAAE,eAAe,EAAE,GAAG,EAAE,CAAC,WAAW,CAAC,EAAC,EAC3C,EAAC,IAAI,EAAE,mBAAmB,EAAE,GAAG,EAAE,CAAC,eAAe,CAAC,EAAC,CACpD,CAAC;AACF,QAAI,CAAC,SAAS,CAAC,MAAM,EAAE,QAAQ,EAAE,oCAAoC,CAAC,CAAC;;AAEvE,QAAI,CAAC,IAAI,EAAE,CAAC;GACb;CACF,CAAC;;AAEF,OAAO,CAAC,aAAa,CAAC,GAAG;AACvB,OAAK,EAAE,eAAS,IAAI,EAAE;AACpB,QAAI,CAAC,GAAG,GAAG,OAAO,CAAC,GAAG,EAAE,CAAC;AACzB,WAAO,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;AAC/B,QAAI,EAAE,CAAC;GACR;AACD,UAAQ,EAAE,kBAAS,IAAI,EAAE;AACvB,WAAO,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACxB,QAAI,EAAE,CAAC;GACR;AACD,kBAAgB,EAAE,uBAAS,IAAI,EAAE;AAC/B,QAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;;AAEf,QAAI,MAAM,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC;AACtD,QAAI,QAAQ,GAAG,CACb,EAAC,IAAI,EAAE,sBAAsB,EAAE,GAAG,EAAE,CAAC,sBAAsB,CAAC,EAAC,EAC7D,EAAC,IAAI,EAAE,+BAA+B,EAAE,GAAG,EAAE,CAAC,+BAA+B,CAAC,EAAC,EAC/E,EAAC,IAAI,EAAE,wCAAwC,EAAE,GAAG,EAAE,CAAC,wCAAwC,CAAC,EAAC,CAClG,CAAC;AACF,QAAI,CAAC,SAAS,CAAC,MAAM,EAAE,QAAQ,EAAE,iBAAiB,CAAC,CAAC;;AAEpD,YAAQ,GAAG,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;AAC9D,QAAI,CAAC,SAAS,CAAC,MAAM,EAAE,QAAQ,EAAE,mDAAmD,CAAC,CAAC;;AAEtF,QAAI,CAAC,IAAI,EAAE,CAAC;GACb;AACD,mBAAiB,EAAE,wBAAS,IAAI,EAAE;AAChC,QAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AACf,QAAI,MAAM,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC,UAAU,CAAC,EAAE,EAAC,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,aAAa,EAAC,CAAC,CAAC;AAC3F,QAAI,QAAQ,GAAG,CACb,EAAC,IAAI,EAAE,eAAe,EAAE,GAAG,EAAE,CAAC,sBAAsB,CAAC,EAAC,EACtD,EAAC,IAAI,EAAE,wBAAwB,EAAE,GAAG,EAAE,CAAC,+BAA+B,CAAC,EAAC,EACxE,EAAC,IAAI,EAAE,iCAAiC,EAAE,GAAG,EAAE,CAAC,wCAAwC,CAAC,EAAC,CAC3F,CAAC;AACF,QAAI,CAAC,SAAS,CAAC,MAAM,EAAE,QAAQ,EAAE,+EAA+E,CAAC,CAAC;AAClH,QAAI,CAAC,IAAI,EAAE,CAAC;GACb;CACF,CAAC","file":"globule_test-compiled.js","sourcesContent":["'use strict';\n\nvar path = require('path');\n\nvar globule = require('../lib/globule.js');\n\n/*\n  ======== A Handy Little Nodeunit Reference ========\n  https://github.com/caolan/nodeunit\n\n  Test methods:\n    test.expect(numAssertions)\n    test.done()\n  Test assertions:\n    test.ok(value, [message])\n    test.equal(actual, expected, [message])\n    test.notEqual(actual, expected, [message])\n    test.deepEqual(actual, expected, [message])\n    test.notDeepEqual(actual, expected, [message])\n    test.strictEqual(actual, expected, [message])\n    test.notStrictEqual(actual, expected, [message])\n    test.throws(block, [error], [message])\n    test.doesNotThrow(block, [error], [message])\n    test.ifError(value)\n*/\n\nexports['match'] = {\n  'empty set': function(test) {\n    test.expect(6);\n    // Should return empty set if a required argument is missing or an empty set.\n    test.deepEqual(globule.match(null, 'foo.js'), [], 'should return empty set.');\n    test.deepEqual(globule.match('*.js', null), [], 'should return empty set.');\n    test.deepEqual(globule.match([], 'foo.js'), [], 'should return empty set.');\n    test.deepEqual(globule.match('*.js', []), [], 'should return empty set.');\n    test.deepEqual(globule.match(null, ['foo.js']), [], 'should return empty set.');\n    test.deepEqual(globule.match(['*.js'], null), [], 'should return empty set.');\n    test.done();\n  },\n  'basic matching': function(test) {\n    test.expect(6);\n    test.deepEqual(globule.match('*.js', 'foo.js'), ['foo.js'], 'should match correctly.');\n    test.deepEqual(globule.match('*.js', ['foo.js']), ['foo.js'], 'should match correctly.');\n    test.deepEqual(globule.match('*.js', ['foo.js', 'bar.css']), ['foo.js'], 'should match correctly.');\n    test.deepEqual(globule.match(['*.js', '*.css'], 'foo.js'), ['foo.js'], 'should match correctly.');\n    test.deepEqual(globule.match(['*.js', '*.css'], ['foo.js']), ['foo.js'], 'should match correctly.');\n    test.deepEqual(globule.match(['*.js', '*.css'], ['foo.js', 'bar.css']), ['foo.js', 'bar.css'], 'should match correctly.');\n    test.done();\n  },\n  'no matches': function(test) {\n    test.expect(2);\n    test.deepEqual(globule.match('*.js', 'foo.css'), [], 'should fail to match.');\n    test.deepEqual(globule.match('*.js', ['foo.css', 'bar.css']), [], 'should fail to match.');\n    test.done();\n  },\n  'unique': function(test) {\n    test.expect(2);\n    test.deepEqual(globule.match('*.js', ['foo.js', 'foo.js']), ['foo.js'], 'should return a uniqued set.');\n    test.deepEqual(globule.match(['*.js', '*.*'], ['foo.js', 'foo.js']), ['foo.js'], 'should return a uniqued set.');\n    test.done();\n  },\n  'flatten': function(test) {\n    test.expect(1);\n    test.deepEqual(globule.match([['*.js', '*.css'], ['*.*', '*.js']], ['foo.js', 'bar.css']),\n      ['foo.js', 'bar.css'],\n      'should process nested pattern arrays correctly.');\n    test.done();\n  },\n  'exclusion': function(test) {\n    test.expect(5);\n    test.deepEqual(globule.match(['!*.js'], ['foo.js', 'bar.js']), [], 'solitary exclusion should match nothing');\n    test.deepEqual(globule.match(['*.js', '!*.js'], ['foo.js', 'bar.js']), [], 'exclusion should cancel match');\n    test.deepEqual(globule.match(['*.js', '!f*.js'], ['foo.js', 'bar.js', 'baz.js']),\n      ['bar.js', 'baz.js'],\n      'partial exclusion should partially cancel match');\n    test.deepEqual(globule.match(['*.js', '!*.js', 'b*.js'], ['foo.js', 'bar.js', 'baz.js']),\n      ['bar.js', 'baz.js'],\n      'inclusion / exclusion order matters');\n    test.deepEqual(globule.match(['*.js', '!f*.js', '*.js'], ['foo.js', 'bar.js', 'baz.js']),\n      ['bar.js', 'baz.js', 'foo.js'],\n      'inclusion / exclusion order matters');\n    test.done();\n  },\n  'options.matchBase': function(test) {\n    test.expect(2);\n    test.deepEqual(globule.match('*.js', ['foo.js', 'bar', 'baz/xyz.js'], {matchBase: true}),\n      ['foo.js', 'baz/xyz.js'],\n      'should matchBase (minimatch) when specified.');\n    test.deepEqual(globule.match('*.js', ['foo.js', 'bar', 'baz/xyz.js']),\n      ['foo.js'],\n      'should not matchBase (minimatch) by default.');\n    test.done();\n  },\n};\n\nexports['isMatch'] = {\n  'basic matching': function(test) {\n    test.expect(6);\n    test.ok(globule.isMatch('*.js', 'foo.js'), 'should match correctly.');\n    test.ok(globule.isMatch('*.js', ['foo.js']), 'should match correctly.');\n    test.ok(globule.isMatch('*.js', ['foo.js', 'bar.css']), 'should match correctly.');\n    test.ok(globule.isMatch(['*.js', '*.css'], 'foo.js'), 'should match correctly.');\n    test.ok(globule.isMatch(['*.js', '*.css'], ['foo.js']), 'should match correctly.');\n    test.ok(globule.isMatch(['*.js', '*.css'], ['foo.js', 'bar.css']), 'should match correctly.');\n    test.done();\n  },\n  'no matches': function(test) {\n    test.expect(6);\n    test.ok(!globule.isMatch('*.js', 'foo.css'), 'should fail to match.');\n    test.ok(!globule.isMatch('*.js', ['foo.css', 'bar.css']), 'should fail to match.');\n    test.ok(!globule.isMatch(null, 'foo.css'), 'should fail to match.');\n    test.ok(!globule.isMatch('*.js', null), 'should fail to match.');\n    test.ok(!globule.isMatch([], 'foo.css'), 'should fail to match.');\n    test.ok(!globule.isMatch('*.js', []), 'should fail to match.');\n    test.done();\n  },\n  'options.matchBase': function(test) {\n    test.expect(2);\n    test.ok(globule.isMatch('*.js', ['baz/xyz.js'], {matchBase: true}), 'should matchBase (minimatch) when specified.');\n    test.ok(!globule.isMatch('*.js', ['baz/xyz.js']), 'should not matchBase (minimatch) by default.');\n    test.done();\n  },\n};\n\nexports['find'] = {\n  setUp: function(done) {\n    this.cwd = process.cwd();\n    process.chdir('test/fixtures/expand');\n    done();\n  },\n  tearDown: function(done) {\n    process.chdir(this.cwd);\n    done();\n  },\n  'basic matching': function(test) {\n    test.expect(5);\n    test.deepEqual(globule.find('**/*.js'), ['js/bar.js', 'js/foo.js'], 'single pattern argument should match.');\n    test.deepEqual(globule.find('**/*.js', '**/*.css'),\n      ['js/bar.js', 'js/foo.js', 'css/baz.css', 'css/qux.css'],\n      'multiple pattern arguments should match.');\n    test.deepEqual(globule.find(['**/*.js', '**/*.css']),\n      ['js/bar.js', 'js/foo.js', 'css/baz.css', 'css/qux.css'],\n      'array of patterns should match.');\n    test.deepEqual(globule.find([['**/*.js'], [['**/*.css', 'js/*.js']]]),\n      ['js/bar.js', 'js/foo.js', 'css/baz.css', 'css/qux.css'],\n      'array of arrays of patterns should be flattened.');\n    test.deepEqual(globule.find('*.xyz'), [], 'bad pattern should fail to match.');\n    test.done();\n  },\n  'unique': function(test) {\n    test.expect(4);\n    test.deepEqual(globule.find('**/*.js', 'js/*.js'),\n      ['js/bar.js', 'js/foo.js'],\n      'file list should be uniqed.');\n    test.deepEqual(globule.find('**/*.js', '**/*.css', 'js/*.js'), ['js/bar.js', 'js/foo.js',\n      'css/baz.css', 'css/qux.css'],\n      'file list should be uniqed.');\n    test.deepEqual(globule.find('js', 'js/'),\n      ['js', 'js/'],\n      'mixed non-ending-/ and ending-/ dirs will not be uniqed by default.');\n    test.deepEqual(globule.find('js', 'js/', {mark: true}),\n      ['js/'],\n      'mixed non-ending-/ and ending-/ dirs will be uniqed when \"mark\" is specified.');\n    test.done();\n  },\n  'file order': function(test) {\n    test.expect(5);\n    var actual = globule.find('**/*.{js,css}');\n    var expected = ['css/baz.css', 'css/qux.css', 'js/bar.js', 'js/foo.js'];\n    test.deepEqual(actual, expected, 'should select 4 files in this order, by default.');\n\n    actual = globule.find('js/foo.js', 'js/bar.js', '**/*.{js,css}');\n    expected = ['js/foo.js', 'js/bar.js', 'css/baz.css', 'css/qux.css'];\n    test.deepEqual(actual, expected, 'specifically-specified-up-front file order should be maintained.');\n\n    actual = globule.find('js/bar.js', 'js/foo.js', '**/*.{js,css}');\n    expected = ['js/bar.js', 'js/foo.js', 'css/baz.css', 'css/qux.css'];\n    test.deepEqual(actual, expected, 'specifically-specified-up-front file order should be maintained.');\n\n    actual = globule.find('**/*.{js,css}', '!css/qux.css', 'css/qux.css');\n    expected = ['css/baz.css', 'js/bar.js', 'js/foo.js', 'css/qux.css'];\n    test.deepEqual(actual, expected, 'if a file is excluded and then re-added, it should be added at the end.');\n\n    actual = globule.find('js/foo.js', '**/*.{js,css}', '!css/qux.css', 'css/qux.css');\n    expected = ['js/foo.js', 'css/baz.css', 'js/bar.js', 'css/qux.css'];\n    test.deepEqual(actual, expected, 'should be able to combine specified-up-front and excluded/added-at-end.');\n    test.done();\n  },\n  'exclusion': function(test) {\n    test.expect(8);\n    test.deepEqual(globule.find(['!js/*.js']), [], 'solitary exclusion should match nothing');\n    test.deepEqual(globule.find(['js/bar.js','!js/bar.js']), [], 'exclusion should negate match');\n    test.deepEqual(globule.find(['**/*.js', '!js/foo.js']),\n      ['js/bar.js'],\n      'should omit single file from matched set');\n    test.deepEqual(globule.find(['!js/foo.js', '**/*.js']),\n      ['js/bar.js', 'js/foo.js'],\n      'inclusion / exclusion order matters');\n    test.deepEqual(globule.find(['**/*.js', '**/*.css', '!js/bar.js', '!css/baz.css']),\n      ['js/foo.js','css/qux.css'],\n      'multiple exclusions should be removed from the set');\n    test.deepEqual(globule.find(['**/*.js', '**/*.css', '!**/*.css']),\n      ['js/bar.js', 'js/foo.js'],\n      'excluded wildcards should be removed from the matched set');\n    test.deepEqual(globule.find(['js/bar.js', 'js/foo.js', 'css/baz.css', 'css/qux.css', '!**/b*.*']),\n      ['js/foo.js', 'css/qux.css'],\n      'different pattern for exclusion should still work');\n    test.deepEqual(globule.find(['js/bar.js', '!**/b*.*', 'js/foo.js', 'css/baz.css', 'css/qux.css']),\n      ['js/foo.js', 'css/baz.css', 'css/qux.css'],\n      'inclusion / exclusion order matters');\n    test.done();\n  },\n  'options.mark': function(test) {\n    test.expect(4);\n    test.deepEqual(globule.find('**d*/**'), [\n      'deep',\n      'deep/deep.txt',\n      'deep/deeper',\n      'deep/deeper/deeper.txt',\n      'deep/deeper/deepest',\n      'deep/deeper/deepest/deepest.txt'], 'should match files and directories.');\n    test.deepEqual(globule.find('**d*/**/'), [\n      'deep/',\n      'deep/deeper/',\n      'deep/deeper/deepest/'], 'trailing / in pattern should match directories only, matches end in /.');\n    test.deepEqual(globule.find('**d*/**', {mark: true}), [\n      'deep/',\n      'deep/deep.txt',\n      'deep/deeper/',\n      'deep/deeper/deeper.txt',\n      'deep/deeper/deepest/',\n      'deep/deeper/deepest/deepest.txt'], 'the minimatch \"mark\" option ensures directories end in /.');\n    test.deepEqual(globule.find('**d*/**/', {mark: true}), [\n      'deep/',\n      'deep/deeper/',\n      'deep/deeper/deepest/'], 'the minimatch \"mark\" option should not remove trailing / from matched paths.');\n    test.done();\n  },\n  'options.filter': function(test) {\n    test.expect(5);\n    test.deepEqual(globule.find('**d*/**', {filter: 'isFile'}), [\n      'deep/deep.txt',\n      'deep/deeper/deeper.txt',\n      'deep/deeper/deepest/deepest.txt'\n    ], 'should match files only.');\n    test.deepEqual(globule.find('**d*/**', {filter: 'isDirectory'}), [\n      'deep',\n      'deep/deeper',\n      'deep/deeper/deepest'\n    ], 'should match directories only.');\n    test.deepEqual(globule.find('**', {\n      arbitraryProp: /deepest/,\n      filter: function(filepath, options) {\n        return options.arbitraryProp.test(filepath);\n      }\n    }), [\n      'deep/deeper/deepest',\n      'deep/deeper/deepest/deepest.txt',\n    ], 'should filter arbitrarily.');\n    test.deepEqual(globule.find('js', 'css', {filter: 'isFile'}), [], 'should fail to match.');\n    test.deepEqual(globule.find('**/*.js', {filter: 'isDirectory'}), [], 'should fail to match.');\n    test.done();\n  },\n  'options.matchBase': function(test) {\n    test.expect(3);\n    test.deepEqual(globule.find('*.js'), [], 'should not matchBase (minimatch) by default.');\n    test.deepEqual(globule.find('*.js', {matchBase: true}),\n      ['js/bar.js', 'js/foo.js'],\n      'matchBase option should be passed through to minimatch.');\n    test.deepEqual(globule.find('*.js', '*.css', {matchBase: true}),\n      ['js/bar.js', 'js/foo.js', 'css/baz.css', 'css/qux.css'],\n      'matchBase option should be passed through to minimatch.');\n    test.done();\n  },\n  'options.srcBase': function(test) {\n    test.expect(5);\n    test.deepEqual(globule.find(['**/deep*.txt'], {srcBase: 'deep'}),\n      ['deep.txt', 'deeper/deeper.txt', 'deeper/deepest/deepest.txt'],\n      'should find paths matching pattern relative to srcBase.');\n    test.deepEqual(globule.find(['**/deep*.txt'], {cwd: 'deep'}),\n      ['deep.txt', 'deeper/deeper.txt', 'deeper/deepest/deepest.txt'],\n      'cwd and srcBase should do the same thing.');\n    test.deepEqual(globule.find(['**/deep*'], {srcBase: 'deep', filter: 'isFile'}),\n      ['deep.txt', 'deeper/deeper.txt', 'deeper/deepest/deepest.txt'],\n      'srcBase should not prevent filtering.');\n    test.deepEqual(globule.find(['**/deep*'], {srcBase: 'deep', filter: 'isDirectory'}),\n      ['deeper', 'deeper/deepest'],\n      'srcBase should not prevent filtering.');\n    test.deepEqual(globule.find(['**/deep*.txt', '!**/deeper**'], {srcBase: 'deep'}),\n      ['deep.txt', 'deeper/deepest/deepest.txt'],\n      'srcBase should not prevent exclusions.');\n    test.done();\n  },\n  'options.prefixBase': function(test) {\n    test.expect(2);\n    test.deepEqual(globule.find(['**/deep*.txt'], {srcBase: 'deep', prefixBase: false}),\n      ['deep.txt', 'deeper/deeper.txt', 'deeper/deepest/deepest.txt'],\n      'should not prefix srcBase to returned paths.');\n    test.deepEqual(globule.find(['**/deep*.txt'], {srcBase: 'deep', prefixBase: true}),\n      ['deep/deep.txt', 'deep/deeper/deeper.txt', 'deep/deeper/deepest/deepest.txt'],\n      'should prefix srcBase to returned paths.');\n    test.done();\n  },\n  'options.nonull': function(test) {\n    test.expect(3);\n    test.deepEqual(globule.find(['*omg*'], {nonull: true}),\n      ['*omg*'],\n      'non-matching patterns should be returned in result set.');\n    test.deepEqual(globule.find(['js/a*', 'js/b*', 'js/c*'], {nonull: true}),\n      ['js/a*', 'js/bar.js', 'js/c*'],\n      'non-matching patterns should be returned in result set.');\n    test.deepEqual(globule.find(['js/foo.js', 'js/bar.js', 'js/nonexistent.js'], {nonull: true}),\n      ['js/foo.js', 'js/bar.js', 'js/nonexistent.js'],\n      'non-matching filenames should be returned in result set.');\n    test.done();\n  },\n};\n\nexports['mapping'] = {\n  'basic mapping': function(test) {\n    test.expect(1);\n\n    var actual = globule.mapping(['a.txt', 'b.txt', 'c.txt']);\n    var expected = [\n      {dest: 'a.txt', src: ['a.txt']},\n      {dest: 'b.txt', src: ['b.txt']},\n      {dest: 'c.txt', src: ['c.txt']},\n    ];\n    test.deepEqual(actual, expected, 'default options should create same-to-same src-dest mappings.');\n\n    test.done();\n  },\n  'options.srcBase': function(test) {\n    test.expect(2);\n    var actual, expected;\n    actual = globule.mapping(['a.txt', 'bar/b.txt', 'bar/baz/c.txt'], {srcBase: 'foo'});\n    expected = [\n      {dest: 'a.txt', src: ['foo/a.txt']},\n      {dest: 'bar/b.txt', src: ['foo/bar/b.txt']},\n      {dest: 'bar/baz/c.txt', src: ['foo/bar/baz/c.txt']},\n    ];\n    test.deepEqual(actual, expected, 'srcBase should be prefixed to src paths (no trailing /).');\n\n    actual = globule.mapping(['a.txt', 'bar/b.txt', 'bar/baz/c.txt'], {srcBase: 'foo/'});\n    test.deepEqual(actual, expected, 'srcBase should be prefixed to src paths (trailing /).');\n\n    test.done();\n  },\n  'options.destBase': function(test) {\n    test.expect(2);\n    var actual, expected;\n\n    actual = globule.mapping(['a.txt', 'bar/b.txt', 'bar/baz/c.txt'], {destBase: 'dest'});\n    expected = [\n      {dest: 'dest/a.txt', src: ['a.txt']},\n      {dest: 'dest/bar/b.txt', src: ['bar/b.txt']},\n      {dest: 'dest/bar/baz/c.txt', src: ['bar/baz/c.txt']},\n    ];\n    test.deepEqual(actual, expected, 'destBase should be prefixed to dest paths (no trailing /).');\n\n    actual = globule.mapping(['a.txt', 'bar/b.txt', 'bar/baz/c.txt'], {destBase: 'dest/'});\n    test.deepEqual(actual, expected, 'destBase should be prefixed to dest paths (trailing /).');\n\n    test.done();\n  },\n  'options.flatten': function(test) {\n    test.expect(1);\n    var actual, expected;\n\n    actual = globule.mapping(['a.txt', 'bar/b.txt', 'bar/baz/c.txt'], {flatten: true});\n    expected = [\n      {dest: 'a.txt', src: ['a.txt']},\n      {dest: 'b.txt', src: ['bar/b.txt']},\n      {dest: 'c.txt', src: ['bar/baz/c.txt']},\n    ];\n    test.deepEqual(actual, expected, 'flatten should remove all src path parts from dest.');\n\n    test.done();\n  },\n  'options.flatten + options.destBase': function(test) {\n    test.expect(1);\n    var actual, expected;\n\n    actual = globule.mapping(['a.txt', 'bar/b.txt', 'bar/baz/c.txt'], {destBase: 'dest', flatten: true});\n    expected = [\n      {dest: 'dest/a.txt', src: ['a.txt']},\n      {dest: 'dest/b.txt', src: ['bar/b.txt']},\n      {dest: 'dest/c.txt', src: ['bar/baz/c.txt']},\n    ];\n    test.deepEqual(actual, expected, 'flatten and destBase should work together.');\n\n    test.done();\n  },\n  'options.ext': function(test) {\n    test.expect(1);\n    var actual, expected;\n\n    actual = globule.mapping(['x/a.js', 'x.y/b.min.js', 'x.y/z.z/c'], {ext: '.foo'});\n    expected = [\n      {dest: 'x/a.foo', src: ['x/a.js']},\n      {dest: 'x.y/b.foo', src: ['x.y/b.min.js']},\n      {dest: 'x.y/z.z/c.foo', src: ['x.y/z.z/c']},\n    ];\n    test.deepEqual(actual, expected, 'by default, ext should replace everything after the first dot in the filename.');\n\n    test.done();\n  },\n  'options.extDot': function(test) {\n    test.expect(2);\n    var actual, expected;\n\n    actual = globule.mapping(['x/a.js', 'x.y/b.bbb.min.js', 'x.y/z.z/c'], {ext: '.foo', extDot: 'first'});\n    expected = [\n      {dest: 'x/a.foo', src: ['x/a.js']},\n      {dest: 'x.y/b.foo', src: ['x.y/b.bbb.min.js']},\n      {dest: 'x.y/z.z/c.foo', src: ['x.y/z.z/c']},\n    ];\n    test.deepEqual(actual, expected, 'extDot of \"first\" should replace everything after the first dot in the filename.');\n\n    actual = globule.mapping(['x/a.js', 'x.y/b.bbb.min.js', 'x.y/z.z/c'], {ext: '.foo', extDot: 'last'});\n    expected = [\n      {dest: 'x/a.foo', src: ['x/a.js']},\n      {dest: 'x.y/b.bbb.min.foo', src: ['x.y/b.bbb.min.js']},\n      {dest: 'x.y/z.z/c.foo', src: ['x.y/z.z/c']},\n    ];\n    test.deepEqual(actual, expected, 'extDot of \"last\" should replace everything after the last dot in the filename.');\n\n    test.done();\n  },\n  'options.rename': function(test) {\n    test.expect(1);\n    var actual, expected;\n    actual = globule.mapping(['a.txt', 'bar/b.txt', 'bar/baz/c.txt'], {\n      arbitraryProp: 'FOO',\n      rename: function(dest, options) {\n        return path.join(options.arbitraryProp, dest.toUpperCase());\n      }\n    });\n    expected = [\n      {dest: 'FOO/A.TXT', src: ['a.txt']},\n      {dest: 'FOO/BAR/B.TXT', src: ['bar/b.txt']},\n      {dest: 'FOO/BAR/BAZ/C.TXT', src: ['bar/baz/c.txt']},\n    ];\n    test.deepEqual(actual, expected, 'allow arbitrary renaming of files.');\n\n    test.done();\n  },\n};\n\nexports['findMapping'] = {\n  setUp: function(done) {\n    this.cwd = process.cwd();\n    process.chdir('test/fixtures');\n    done();\n  },\n  tearDown: function(done) {\n    process.chdir(this.cwd);\n    done();\n  },\n  'basic matching': function(test) {\n    test.expect(2);\n\n    var actual = globule.findMapping(['expand/**/*.txt']);\n    var expected = [\n      {dest: 'expand/deep/deep.txt', src: ['expand/deep/deep.txt']},\n      {dest: 'expand/deep/deeper/deeper.txt', src: ['expand/deep/deeper/deeper.txt']},\n      {dest: 'expand/deep/deeper/deepest/deepest.txt', src: ['expand/deep/deeper/deepest/deepest.txt']},\n    ];\n    test.deepEqual(actual, expected, 'default options');\n\n    expected = globule.mapping(globule.find(['expand/**/*.txt']));\n    test.deepEqual(actual, expected, 'this is what it\\'s doing under the hood, anwyays.');\n\n    test.done();\n  },\n  'options.srcBase': function(test) {\n    test.expect(1);\n    var actual = globule.findMapping(['**/*.txt'], {destBase: 'dest', srcBase: 'expand/deep'});\n    var expected = [\n      {dest: 'dest/deep.txt', src: ['expand/deep/deep.txt']},\n      {dest: 'dest/deeper/deeper.txt', src: ['expand/deep/deeper/deeper.txt']},\n      {dest: 'dest/deeper/deepest/deepest.txt', src: ['expand/deep/deeper/deepest/deepest.txt']},\n    ];\n    test.deepEqual(actual, expected, 'srcBase should be stripped from front of destPath, pre-destBase+destPath join');\n    test.done();\n  },\n};\n"]}