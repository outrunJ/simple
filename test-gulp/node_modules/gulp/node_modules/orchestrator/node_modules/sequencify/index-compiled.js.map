{"version":3,"sources":["index.js"],"names":[],"mappings":";;AAEA,YAAY,CAAC;;AAEb,IAAI,QAAQ,GAAG,SAAX,QAAQ,CAAa,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,IAAI,EAAE;AACrD,KAAI,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;AACxB,KAAI,GAAG,IAAI,IAAI,EAAE,CAAC;AAClB,MAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAClC,MAAI,GAAG,KAAK,CAAC,CAAC,CAAC;;AAAC,AAEhB,MAAI,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;AACjC,OAAI,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC;AACnB,OAAI,CAAC,IAAI,EAAE;AACV,KAAC,GAAG,IAAI,KAAK,CAAC,QAAQ,GAAC,IAAI,GAAC,kBAAkB,CAAC,CAAC;AAChD,KAAC,CAAC,WAAW,GAAG,IAAI,CAAC;AACrB,KAAC,CAAC,QAAQ,GAAG,EAAE,CAAC;AAChB,SAAK,CAAC,IAAI,KAAK,EAAE;AAChB,SAAI,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE;AAC5B,OAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;MAC/B;KACD;AACD,UAAM,CAAC,CAAC;IACR;AACD,OAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE;AAC5B,QAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAChB,KAAC,GAAG,IAAI,KAAK,CAAC,mCAAmC,GAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;AACrE,KAAC,CAAC,cAAc,GAAG,IAAI,CAAC;AACxB,KAAC,CAAC,QAAQ,GAAG,EAAE,CAAC;AAChB,SAAK,CAAC,IAAI,KAAK,EAAE;AAChB,SAAI,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE;AAC5B,OAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;MAC/B;KACD;AACD,UAAM,CAAC,CAAC;IACR;AACD,OAAI,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE;AACpB,QAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAChB,YAAQ,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,EAAE,OAAO,EAAE,IAAI,CAAC;AAAC,AACzC,QAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IACf;AACD,UAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;GACnB;EACD;CACD,CAAC;;AAEF,MAAM,CAAC,OAAO,GAAG,QAAQ,CAAC","file":"index-compiled.js","sourcesContent":["/*jshint node:true */\r\n\r\n\"use strict\";\r\n\r\nvar sequence = function (tasks, names, results, nest) {\r\n\tvar i, name, node, e, j;\r\n\tnest = nest || [];\r\n\tfor (i = 0; i < names.length; i++) {\r\n\t\tname = names[i];\r\n\t\t// de-dup results\r\n\t\tif (results.indexOf(name) === -1) {\r\n\t\t\tnode = tasks[name];\r\n\t\t\tif (!node) {\r\n\t\t\t\te = new Error('task \"'+name+'\" is not defined');\r\n\t\t\t\te.missingTask = name;\r\n\t\t\t\te.taskList = [];\r\n\t\t\t\tfor (j in tasks) {\r\n\t\t\t\t\tif (tasks.hasOwnProperty(j)) {\r\n\t\t\t\t\t\te.taskList.push(tasks[j].name);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthrow e;\r\n\t\t\t}\r\n\t\t\tif (nest.indexOf(name) > -1) {\r\n\t\t\t\tnest.push(name);\r\n\t\t\t\te = new Error('Recursive dependencies detected: '+nest.join(' -> '));\r\n\t\t\t\te.recursiveTasks = nest;\r\n\t\t\t\te.taskList = [];\r\n\t\t\t\tfor (j in tasks) {\r\n\t\t\t\t\tif (tasks.hasOwnProperty(j)) {\r\n\t\t\t\t\t\te.taskList.push(tasks[j].name);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthrow e;\r\n\t\t\t}\r\n\t\t\tif (node.dep.length) {\r\n\t\t\t\tnest.push(name);\r\n\t\t\t\tsequence(tasks, node.dep, results, nest); // recurse\r\n\t\t\t\tnest.pop(name);\r\n\t\t\t}\r\n\t\t\tresults.push(name);\r\n\t\t}\r\n\t}\r\n};\r\n\r\nmodule.exports = sequence;\r\n"]}