{"version":3,"sources":["runTask.js"],"names":[],"mappings":";;AAEA,YAAY,CAAC;;AAEb,IAAI,GAAG,GAAG,OAAO,CAAC,eAAe,CAAC,CAAC;AACnC,IAAI,OAAO,GAAG,OAAO,CAAC,gBAAgB,CAAC,CAAC;;AAExC,MAAM,CAAC,OAAO,GAAG,UAAU,IAAI,EAAE,IAAI,EAAE;AACtC,KAAI,IAAI,GAAG,IAAI;KAAE,MAAM;KAAE,EAAE;KAAE,MAAM,GAAG,KAAK;KAAE,KAAK;KAAE,CAAC,CAAC;;AAEtD,OAAM,GAAG,UAAU,GAAG,EAAE,SAAS,EAAE;AAClC,MAAI,UAAU,GAAG,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;;AAEvC,MAAI,MAAM,IAAI,CAAC,GAAG,EAAE;AACnB,MAAG,GAAG,IAAI,KAAK,CAAC,gDAAgD,CAAC,CAAC;GAClE;AACD,QAAM,GAAG,IAAI,CAAC;;AAEd,MAAI,QAAQ,GAAG,UAAU,CAAC,CAAC,CAAC,GAAI,UAAU,CAAC,CAAC,CAAC,GAAG,GAAG,AAAC;;AAAC,AAErD,MAAI,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,EAAE;AACpB,WAAQ,EAAE,QAAQ;AAClB,aAAU,EAAE,UAAU;AACtB,YAAS,EAAE,SAAS;GACpB,CAAC,CAAC;EACH,CAAC;;AAEF,GAAE,GAAG,UAAU,GAAG,EAAE;AACnB,QAAM,CAAC,GAAG,EAAE,UAAU,CAAC,CAAC;EACxB,CAAC;;AAEF,KAAI;AACH,OAAK,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC;AACzB,GAAC,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC;EACb,CAAC,OAAO,GAAG,EAAE;AACb,SAAO,MAAM,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;EAC5B;;AAED,KAAI,CAAC,IAAI,OAAO,CAAC,CAAC,IAAI,KAAK,UAAU,EAAE;;;AAGtC,GAAC,CAAC,IAAI,CAAC,YAAY;AAClB,SAAM,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;GACxB,EAAE,UAAS,GAAG,EAAE;AAChB,SAAM,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC;GACvB,CAAC,CAAC;EAEH,MAAM,IAAI,CAAC,IAAI,OAAO,CAAC,CAAC,IAAI,KAAK,UAAU,EAAE;;;AAG7C,KAAG,CAAC,CAAC,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,CAAC,QAAQ,EAAE,QAAQ,EAAE,CAAC,CAAC,QAAQ,IAAI,CAAC,CAAC,CAAC,QAAQ,EAAE,EAAE,UAAS,GAAG,EAAC;AAC/F,SAAM,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;GACtB,CAAC;;;AAAC,AAGG,SAAO,CAAC,CAAC,CAAC,CAAC;EAEjB,MAAM,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;;AAE7B,QAAM,CAAC,IAAI,EAAE,MAAM,CAAC;;;;EAKpB;AALqB,CAMtB,CAAC","file":"runTask-compiled.js","sourcesContent":["/*jshint node:true */\n\n\"use strict\";\n\nvar eos = require('end-of-stream');\nvar consume = require('stream-consume');\n\nmodule.exports = function (task, done) {\n\tvar that = this, finish, cb, isDone = false, start, r;\n\n\tfinish = function (err, runMethod) {\n\t\tvar hrDuration = process.hrtime(start);\n\n\t\tif (isDone && !err) {\n\t\t\terr = new Error('task completion callback called too many times');\n\t\t}\n\t\tisDone = true;\n\n\t\tvar duration = hrDuration[0] + (hrDuration[1] / 1e9); // seconds\n\n\t\tdone.call(that, err, {\n\t\t\tduration: duration, // seconds\n\t\t\thrDuration: hrDuration, // [seconds,nanoseconds]\n\t\t\trunMethod: runMethod\n\t\t});\n\t};\n\n\tcb = function (err) {\n\t\tfinish(err, 'callback');\n\t};\n\n\ttry {\n\t\tstart = process.hrtime();\n\t\tr = task(cb);\n\t} catch (err) {\n\t\treturn finish(err, 'catch');\n\t}\n\n\tif (r && typeof r.then === 'function') {\n\t\t// wait for promise to resolve\n\t\t// FRAGILE: ASSUME: Promises/A+, see http://promises-aplus.github.io/promises-spec/\n\t\tr.then(function () {\n\t\t\tfinish(null, 'promise');\n\t\t}, function(err) {\n\t\t\tfinish(err, 'promise');\n\t\t});\n\n\t} else if (r && typeof r.pipe === 'function') {\n\t\t// wait for stream to end\n\n\t\teos(r, { error: true, readable: r.readable, writable: r.writable && !r.readable }, function(err){\n\t\t\tfinish(err, 'stream');\n\t\t});\n\n\t\t// Ensure that the stream completes\n        consume(r);\n\n\t} else if (task.length === 0) {\n\t\t// synchronous, function took in args.length parameters, and the callback was extra\n\t\tfinish(null, 'sync');\n\n\t//} else {\n\t\t// FRAGILE: ASSUME: callback\n\n\t}\n};\n"]}