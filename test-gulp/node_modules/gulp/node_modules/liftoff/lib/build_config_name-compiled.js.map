{"version":3,"sources":["build_config_name.js"],"names":[],"mappings":";;AAAA,MAAM,CAAC,OAAO,GAAG,UAAU,IAAI,EAAE;AAC/B,MAAI,GAAG,IAAI,IAAI,EAAE,CAAC;AAClB,MAAI,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;AACjC,MAAI,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;AACjC,MAAI,CAAC,UAAU,EAAE;AACf,UAAM,IAAI,KAAK,CAAC,8BAA8B,CAAC,CAAC;GACjD;AACD,MAAI,UAAU,YAAY,MAAM,EAAE;AAChC,WAAO,CAAC,UAAU,CAAC,CAAC;GACrB;AACD,MAAI,CAAC,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE;AAC9B,UAAM,IAAI,KAAK,CAAC,8CAA8C,CAAC,CAAC;GACjE;AACD,SAAO,UAAU,CAAC,GAAG,CAAC,UAAU,GAAG,EAAE;AACnC,WAAO,UAAU,GAAG,GAAG,CAAC;GACzB,CAAC,CAAC;CACJ,CAAC","file":"build_config_name-compiled.js","sourcesContent":["module.exports = function (opts) {\n  opts = opts || {};\n  var configName = opts.configName;\n  var extensions = opts.extensions;\n  if (!configName) {\n    throw new Error('Please specify a configName.');\n  }\n  if (configName instanceof RegExp) {\n    return [configName];\n  }\n  if (!Array.isArray(extensions)) {\n    throw new Error('Please provide an array of valid extensions.');\n  }\n  return extensions.map(function (ext) {\n    return configName + ext;\n  });\n};\n"]}