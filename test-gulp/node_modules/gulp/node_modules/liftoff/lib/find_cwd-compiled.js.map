{"version":3,"sources":["find_cwd.js"],"names":[],"mappings":";;AAAA,IAAM,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;;AAE7B,MAAM,CAAC,OAAO,GAAG,UAAU,IAAI,EAAE;AAC/B,MAAI,CAAC,IAAI,EAAE;AACT,QAAI,GAAG,EAAE,CAAC;GACX;AACD,MAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;AACnB,MAAI,UAAU,GAAG,IAAI,CAAC,UAAU;;;AAAC,AAGjC,MAAI,OAAO,UAAU,KAAK,QAAQ,IAAI,CAAC,GAAG,EAAE;AAC1C,OAAG,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC;GAC9C;AACD,MAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;AAC3B,WAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;GAC1B;AACD,SAAO,OAAO,CAAC,GAAG,EAAE,CAAC;CACtB,CAAC","file":"find_cwd-compiled.js","sourcesContent":["const path = require('path');\n\nmodule.exports = function (opts) {\n  if (!opts) {\n    opts = {};\n  }\n  var cwd = opts.cwd;\n  var configPath = opts.configPath;\n  // if a path to the desired config was specified\n  // but no cwd was provided, use configPath dir\n  if (typeof configPath === 'string' && !cwd) {\n    cwd = path.dirname(path.resolve(configPath));\n  }\n  if (typeof cwd === 'string') {\n    return path.resolve(cwd);\n  }\n  return process.cwd();\n};\n"]}