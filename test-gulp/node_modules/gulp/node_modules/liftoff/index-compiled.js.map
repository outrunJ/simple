{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["const fs = require('fs');\nconst util = require('util');\nconst path = require('path');\nconst EE = require('events').EventEmitter;\n\nconst extend = require('extend');\nconst resolve = require('resolve');\nconst flaggedRespawn = require('flagged-respawn');\nconst rechoir = require('rechoir');\n\nconst findCwd = require('./lib/find_cwd');\nconst findConfig = require('./lib/find_config');\nconst fileSearch = require('./lib/file_search');\nconst parseOptions = require('./lib/parse_options');\nconst silentRequire = require('./lib/silent_require');\nconst buildConfigName = require('./lib/build_config_name');\n\n\nfunction Liftoff (opts) {\n  EE.call(this);\n  extend(this, parseOptions(opts));\n}\nutil.inherits(Liftoff, EE);\n\nLiftoff.prototype.requireLocal = function (module, basedir) {\n  try {\n    var result = require(resolve.sync(module, {basedir: basedir}));\n    this.emit('require', module, result);\n    return result;\n  } catch (e) {\n    this.emit('requireFail', module, e);\n  }\n};\n\nLiftoff.prototype.buildEnvironment = function (opts) {\n  opts = opts || {};\n\n  // get modules we want to preload\n  var preload = opts.require || [];\n\n  // ensure items to preload is an array\n  if (!Array.isArray(preload)) {\n    preload = [preload];\n  }\n\n  // make a copy of search paths that can be mutated for this run\n  var searchPaths = this.searchPaths.slice();\n\n  // calculate current cwd\n  var cwd = findCwd(opts);\n\n  // if cwd was provided explicitly, only use it for searching config\n  if (opts.cwd) {\n    searchPaths = [cwd];\n  } else {\n    // otherwise just search in cwd first\n    searchPaths.unshift(cwd);\n  }\n\n  // calculate the regex to use for finding the config file\n  var configNameSearch = buildConfigName({\n    configName: this.configName,\n    extensions: Object.keys(this.extensions)\n  });\n\n  // calculate configPath\n  var configPath = findConfig({\n    configNameSearch: configNameSearch,\n    searchPaths: searchPaths,\n    configPath: opts.configPath\n  });\n\n  // if we have a config path, save the directory it resides in.\n  var configBase;\n  if (configPath) {\n    configBase = path.dirname(configPath);\n    // if cwd wasn't provided explicitly, it should match configBase\n    if (!opts.cwd) {\n      cwd = configBase;\n    }\n    // resolve symlink if needed\n    if (fs.lstatSync(configPath).isSymbolicLink()) {\n      configPath = fs.realpathSync(configPath);\n    }\n  }\n\n  // TODO: break this out into lib/\n  // locate local module and package next to config or explicitly provided cwd\n  var modulePath, modulePackage;\n  try {\n    var delim = (process.platform === 'win32' ? ';' : ':'),\n        paths = (process.env.NODE_PATH ? process.env.NODE_PATH.split(delim) : []);\n    modulePath = resolve.sync(this.moduleName, {basedir: configBase || cwd, paths: paths});\n    modulePackage = silentRequire(fileSearch('package.json', [modulePath]));\n  } catch (e) {}\n\n  // if we have a configuration but we failed to find a local module, maybe\n  // we are developing against ourselves?\n  if (!modulePath && configPath) {\n    // check the package.json sibling to our config to see if its `name`\n    // matches the module we're looking for\n    var modulePackagePath = fileSearch('package.json', [configBase]);\n    modulePackage = silentRequire(modulePackagePath);\n    if (modulePackage && modulePackage.name === this.moduleName) {\n      // if it does, our module path is `main` inside package.json\n      modulePath = path.join(path.dirname(modulePackagePath), modulePackage.main || 'index.js');\n      cwd = configBase;\n    } else {\n      // clear if we just required a package for some other project\n      modulePackage = {};\n    }\n  }\n\n  // load any modules which were requested to be required\n  if (preload.length) {\n    // unique results first\n    preload.filter(function (value, index, self) {\n      return self.indexOf(value) === index;\n    }).forEach(function (dep) {\n      this.requireLocal(dep, findCwd(opts));\n    }, this);\n  }\n\n  // use rechoir to autoload any required modules\n  var autoloads;\n  if (configPath) {\n    autoloads = rechoir.prepare(this.extensions, configPath, cwd, true);\n    if (autoloads instanceof Error) {\n      autoloads = autoloads.failures;\n    }\n    if (Array.isArray(autoloads)) {\n      autoloads.forEach(function (attempt) {\n        if (attempt.error) {\n          this.emit('requireFail', attempt.moduleName, attempt.error);\n        } else {\n          this.emit('require', attempt.moduleName, attempt.module);\n        }\n      }, this);\n    }\n  }\n\n  return {\n    cwd: cwd,\n    require: preload,\n    configNameSearch: configNameSearch,\n    configPath: configPath,\n    configBase: configBase,\n    modulePath: modulePath,\n    modulePackage: modulePackage || {}\n  };\n};\n\nLiftoff.prototype.handleFlags = function (cb) {\n  if (typeof this.v8flags === 'function') {\n    this.v8flags(function (err, flags) {\n      if (err) {\n        cb(err);\n      } else {\n        cb(null, flags);\n      }\n    });\n  } else {\n    process.nextTick(function () {\n      cb(null, this.v8flags);\n    }.bind(this));\n  }\n};\n\nLiftoff.prototype.launch = function (opts, fn) {\n  if (typeof fn !== 'function') {\n    throw new Error('You must provide a callback function.');\n  }\n  process.title = this.processTitle;\n\n  var completion = opts.completion;\n  if (completion && this.completions) {\n    return this.completions(completion);\n  }\n\n  this.handleFlags(function (err, flags) {\n    if (err) {\n      throw err;\n    } else {\n      if (flags) {\n        flaggedRespawn(flags, process.argv, function (ready, child) {\n          if (child !== process) {\n            this.emit('respawn', process.argv.filter(function (flag) {\n              return flags.indexOf(flag) !== -1;\n            }.bind(this)), child);\n          }\n          if (ready) {\n            fn.call(this, this.buildEnvironment(opts));\n          }\n        }.bind(this));\n      } else {\n        fn.call(this, this.buildEnvironment(opts));\n      }\n    }\n  }.bind(this));\n};\n\n\n\nmodule.exports = Liftoff;\n"]}