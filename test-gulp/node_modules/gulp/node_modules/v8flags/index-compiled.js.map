{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["// this entire module is depressing. i should have spent my time learning\n// how to patch v8 so that these options would just be available on the\n// process object.\n\nconst os = require('os');\nconst fs = require('fs');\nconst path = require('path');\nconst execFile = require('child_process').execFile;\nconst env = process.env;\nconst user = env.LOGNAME || env.USER || env.LNAME || env.USERNAME;\nconst configfile = '.v8flags.'+process.versions.v8+'.'+user+'.json';\nconst exclusions = ['--help'];\n\nconst failureMessage = [\n  'Unable to cache a config file for v8flags to a your home directory',\n  'or a temporary folder. To fix this problem, please correct your',\n  'environment by setting HOME=/path/to/home or TEMP=/path/to/temp.',\n  'NOTE: the user running this must be able to access provided path.',\n  'If all else fails, please open an issue here:',\n  'http://github.com/tkellen/js-v8flags'\n].join('\\n');\n\nfunction fail (err) {\n  err.message += '\\n\\n' + failureMessage;\n  return err;\n}\n\nfunction openConfig (cb) {\n  var userHome = require('user-home');\n  var configpath = path.join(userHome || os.tmpdir(), configfile);\n  var content;\n  try {\n    // if the config file is valid, it should be json and therefore\n    // node should be able to require it directly. if this doesn't\n    // throw, we're done!\n    content = require(configpath);\n    process.nextTick(function () {\n      cb(null, content);\n    });\n  } catch (e) {\n    // if requiring the config file failed, maybe it doesn't exist, or\n    // perhaps it has become corrupted. instead of calling back with the\n    // content of the file, call back with a file descriptor that we can\n    // write the cached data to\n    fs.open(configpath, 'w+', function (err, fd) {\n      if (err) {\n        return cb(err);\n      }\n      return cb(null, fd);\n    });\n  }\n}\n\n// i can't wait for the day this whole module is obsolete because these\n// options are available on the process object. this executes node with\n// `--v8-options` and parses the result, returning an array of command\n// line flags.\nfunction getFlags (cb) {\n  execFile(process.execPath, ['--v8-options'], function (execErr, result) {\n    if (execErr) {\n      return cb(execErr);\n    }\n    var flags = result.match(/\\s\\s--(\\w+)/gm).map(function (match) {\n      return match.substring(2);\n    }).filter(function (name) {\n      return exclusions.indexOf(name) === -1;\n    });\n    return cb(null, flags);\n  });\n}\n\n// write some json to a file descriptor. if this fails, call back\n// with both the error and the data that was meant to be written.\nfunction writeConfig (fd, flags, cb) {\n  var buf = new Buffer(JSON.stringify(flags));\n  return fs.write(fd, buf, 0, buf.length, 0 , function (writeErr) {\n    fs.close(fd, function (closeErr) {\n      var err = writeErr || closeErr;\n      if (err) {\n        return cb(fail(err), flags);\n      }\n      return cb(null, flags);\n    });\n  });\n}\n\nmodule.exports = function (cb) {\n  // bail early if this is not node\n  var isElectron = process.versions && process.versions.electron;\n  if (isElectron) {\n    return process.nextTick(function () {\n      cb(null, []);\n    });\n  }\n\n  // attempt to open/read cache file\n  openConfig(function (openErr, result) {\n    if (!openErr && typeof result !== 'number') {\n      return cb(null, result);\n    }\n    // if the result is not an array, we need to go fetch\n    // the flags by invoking node with `--v8-options`\n    getFlags(function (flagsErr, flags) {\n      // if there was an error fetching the flags, bail immediately\n      if (flagsErr) {\n        return cb(flagsErr);\n      }\n      // if there was a problem opening the config file for writing\n      // throw an error but include the flags anyway so that users\n      // can continue to execute (at the expense of having to fetch\n      // flags on every run until they fix the underyling problem).\n      if (openErr) {\n        return cb(fail(openErr), flags);\n      }\n      // write the config file to disk so subsequent runs can read\n      // flags out of a cache file.\n      return writeConfig(result, flags, cb);\n    });\n  });\n};\n\nmodule.exports.configfile = configfile;\n"]}