{"version":3,"sources":["index.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AACb,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC3B,IAAI,YAAY,GAAG,OAAO,CAAC,gBAAgB,CAAC,CAAC;AAC7C,IAAI,oBAAoB,GAAG,OAAO,CAAC,wBAAwB,CAAC,CAAC;AAC7D,IAAI,QAAQ,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC;;AAEpC,MAAM,CAAC,OAAO,GAAG,UAAU,EAAE,EAAE,IAAI,EAAE;AACpC,KAAI,OAAO,EAAE,KAAK,QAAQ,EAAE;AAC3B,MAAI,GAAG,EAAE,CAAC;AACV,IAAE,GAAG,GAAG,CAAC;EACT;;AAED,KAAI,GAAG,IAAI,IAAI,EAAE,CAAC;;AAElB,QAAO,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC,CACrB,IAAI,CAAC,UAAU,KAAK,EAAE;AACtB,MAAI,KAAK,EAAE;AACV,KAAE,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,cAAc,CAAC,CAAC;GACnC;;AAED,SAAO,YAAY,CAAC,EAAE,CAAC,CAAC;EACxB,CAAC,CACD,IAAI,CAAC,UAAU,CAAC,EAAE;AAClB,MAAI,IAAI,CAAC,SAAS,KAAK,KAAK,EAAE;AAC7B,uBAAoB,CAAC,CAAC,CAAC,CAAC;GACxB;;AAED,SAAO,CAAC,CAAC;EACT,CAAC,CAAC;CACJ,CAAC;;AAEF,MAAM,CAAC,OAAO,CAAC,IAAI,GAAG,UAAU,EAAE,EAAE,IAAI,EAAE;AACzC,KAAI,OAAO,EAAE,KAAK,QAAQ,EAAE;AAC3B,MAAI,GAAG,EAAE,CAAC;AACV,IAAE,GAAG,GAAG,CAAC;EACT;;AAED,KAAI,GAAG,IAAI,IAAI,EAAE,CAAC;AAClB,GAAE,GAAG,QAAQ,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,cAAc,CAAC,GAAG,EAAE,CAAC;;AAE/D,KAAI,CAAC,GAAG,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;;AAE9B,KAAI,IAAI,CAAC,SAAS,KAAK,KAAK,EAAE;AAC7B,sBAAoB,CAAC,CAAC,CAAC,CAAC;EACxB;;AAED,QAAO,CAAC,CAAC;CACT,CAAC","file":"index-compiled.js","sourcesContent":["'use strict';\nvar path = require('path');\nvar loadJsonFile = require('load-json-file');\nvar normalizePackageData = require('normalize-package-data');\nvar pathType = require('path-type');\n\nmodule.exports = function (fp, opts) {\n\tif (typeof fp !== 'string') {\n\t\topts = fp;\n\t\tfp = '.';\n\t}\n\n\topts = opts || {};\n\n\treturn pathType.dir(fp)\n\t\t.then(function (isDir) {\n\t\t\tif (isDir) {\n\t\t\t\tfp = path.join(fp, 'package.json');\n\t\t\t}\n\n\t\t\treturn loadJsonFile(fp);\n\t\t})\n\t\t.then(function (x) {\n\t\t\tif (opts.normalize !== false) {\n\t\t\t\tnormalizePackageData(x);\n\t\t\t}\n\n\t\t\treturn x;\n\t\t});\n};\n\nmodule.exports.sync = function (fp, opts) {\n\tif (typeof fp !== 'string') {\n\t\topts = fp;\n\t\tfp = '.';\n\t}\n\n\topts = opts || {};\n\tfp = pathType.dirSync(fp) ? path.join(fp, 'package.json') : fp;\n\n\tvar x = loadJsonFile.sync(fp);\n\n\tif (opts.normalize !== false) {\n\t\tnormalizePackageData(x);\n\t}\n\n\treturn x;\n};\n"]}