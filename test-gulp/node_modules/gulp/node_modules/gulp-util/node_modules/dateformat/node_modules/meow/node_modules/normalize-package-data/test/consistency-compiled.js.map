{"version":3,"sources":["consistency.js"],"names":[],"mappings":";;AAAA,IAAI,GAAG,GAAG,OAAO,CAAC,KAAK,CAAC,CAAA;AACxB,IAAI,SAAS,GAAG,OAAO,CAAC,kBAAkB,CAAC,CAAA;AAC3C,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAA;AAC1B,IAAI,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC,CAAA;AACtB,IAAI,CAAC,GAAG,OAAO,CAAC,YAAY,CAAC,CAAA;AAC7B,IAAI,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,CAAA;;AAE5B,IAAI,IAAI,EAAE,UAAU,CAAA;AACpB,IAAI,IAAI,CAAA;;AAER,GAAG,CAAC,IAAI,CAAC,0BAA0B,EAAE,UAAS,CAAC,EAAE;AAC/C,MAAI,CAAC,OAAO,CAAC,SAAS,EAAE,mCAAmC,CAAC,CAAA;AAC5D,IAAE,CAAC,OAAO,CAAE,SAAS,GAAG,WAAW,EAAE,UAAU,GAAG,EAAE,OAAO,EAAE;;AAE3D,qBAAiB,GAAG,UAAS,SAAS,EAAE,IAAI,EAAE;AAC5C,UAAI,GAAG,UAAS,GAAG,EAAE;;OAEpB,CAAA;AACD,cAAQ,GAAG,SAAS,GAAG,YAAY,GAAG,SAAS,CAAA;AAC/C,QAAE,CAAC,QAAQ,CAAC,QAAQ,EAAE,UAAS,GAAG,EAAE,QAAQ,EAAE;AAC5C,YAAI,GAAG,EAAE,OAAO,IAAI,CAAC,GAAG,CAAC,CAAA;AACzB,YAAI,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAA;AACtC,iBAAS,CAAC,IAAI,EAAE,IAAI,CAAC,CAAA;AACrB,kBAAU,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAA;AAC1B,iBAAS,CAAC,IAAI,EAAE,IAAI,CAAC,CAAA;AACrB,SAAC,CAAC,SAAS,CAAC,UAAU,EAAE,IAAI,EAC1B,mBAAmB,GAAG,SAAS,GAAG,iBAAiB,CAAC,CAAA;AACtD,YAAI,CAAC,IAAI,CAAC,CAAA;OACX,CAAC;AAAA,KACH;AAAA,AACD,SAAK,CAAC,OAAO,CAAC,OAAO,EAAE,iBAAiB,EAAE,UAAS,GAAG,EAAE;AACtD,UAAI,GAAG,EAAE,MAAM,GAAG,CAAA;AAClB,OAAC,CAAC,GAAG,EAAE,CAAA;KACR,CAAC,CAAA;GACH,CAAC;AAAA,CACH,CAAC;AAAA","file":"consistency-compiled.js","sourcesContent":["var tap = require(\"tap\")\nvar normalize = require(\"../lib/normalize\")\nvar path = require(\"path\")\nvar fs = require(\"fs\")\nvar _ = require(\"underscore\")\nvar async = require(\"async\")\n\nvar data, clonedData\nvar warn\n\ntap.test(\"consistent normalization\", function(t) {\n  path.resolve(__dirname, \"./fixtures/read-package-json.json\")\n  fs.readdir (__dirname + \"/fixtures\", function (err, entries) {\n    // entries = ['coffee-script.json'] // uncomment to limit to a specific file\n    verifyConsistency = function(entryName, next) {\n      warn = function(msg) { \n        // t.equal(\"\",msg) // uncomment to have some kind of logging of warnings\n      }\n      filename = __dirname + \"/fixtures/\" + entryName\n      fs.readFile(filename, function(err, contents) {\n        if (err) return next(err)\n        data = JSON.parse(contents.toString())\n        normalize(data, warn)\n        clonedData = _.clone(data)\n        normalize(data, warn)\n        t.deepEqual(clonedData, data,\n          \"Normalization of \" + entryName + \" is consistent.\")\n        next(null)\n      }) // fs.readFile\n    } // verifyConsistency\n    async.forEach(entries, verifyConsistency, function(err) {\n      if (err) throw err\n      t.end()\n    })\n  }) // fs.readdir\n}) // tap.test"]}