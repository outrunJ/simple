{"version":3,"sources":["index.js"],"names":[],"mappings":";;AAAA,IAAI,KAAK,GAAG,OAAO,CAAC,uBAAuB,CAAC,CAAC;AAC7C,IAAI,OAAO,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC;;AAEtC,IAAI,cAAc,GAChB,oBAAoB,GACpB,0DAA0D,GAC1D,mBAAmB,GACnB,6BAA6B,AAC9B,CAAC;;AAEF,IAAI,eAAe,GAAG,0BAA0B,CAAC;;AAEjD,SAAS,UAAU,CAAC,MAAM,EAAE,MAAM,EAAE;AAClC,SAAO,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,MAAM,CAAC,MAAM,CAAC,KAAK,MAAM,CAAC;CAClD;;AAED,SAAS,cAAc,CAAC,GAAG,EAAE;AAC3B,MAAI,GAAG,CAAC,cAAc,CAAC,SAAS,CAAC,EAAE;AACjC,QAAI,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC;AAC1B,WACE,UAAU,CAAC,YAAY,EAAE,OAAO,CAAC,IACjC,UAAU,CAAC,aAAa,EAAE,OAAO,CAAC,CAClC;GACH,MAAM;AACL,WACE,cAAc,CAAC,GAAG,CAAC,IAAI,CAAC,IACxB,cAAc,CAAC,GAAG,CAAC,KAAK,CAAC,CACzB;GACH;CACF;;AAED,MAAM,CAAC,OAAO,GAAG,UAAS,QAAQ,EAAE;AAClC,MAAI,GAAG,CAAC;;AAER,MAAI;AACF,OAAG,GAAG,KAAK,CAAC,QAAQ,CAAC,CAAC;GACvB,CAAC,OAAO,CAAC,EAAE;AACV,QAAI,KAAK,CAAA;AACT,QACE,QAAQ,KAAK,YAAY,IACzB,QAAQ,KAAK,YAAY,EACzB;AACA,aAAO;AACL,2BAAmB,EAAE,IAAI;AACzB,2BAAmB,EAAE,IAAI;AACzB,kBAAU,EAAE,IAAI;OACjB,CAAC;KACH,MAAM,IAAI,KAAK,GAAG,eAAe,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE;AACjD,aAAO;AACL,2BAAmB,EAAE,IAAI;AACzB,2BAAmB,EAAE,IAAI;AACzB,cAAM,EAAE,KAAK,CAAC,CAAC,CAAC;OACjB,CAAC;KACH,MAAM;AACL,UAAI,MAAM,GAAG;AACX,2BAAmB,EAAE,KAAK;AAC1B,2BAAmB,EAAE,KAAK;AAC1B,gBAAQ,EAAE,CAAC,cAAc,CAAC;OAC3B,CAAC;AACF,UAAI,SAAS,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAClC,UAAI,SAAS,EAAE;AACb,cAAM,CAAC,QAAQ,CAAC,IAAI,CAClB,8CAA8C,GAAG,SAAS,GAAG,GAAG,CACjE,CAAC;OACH;AACD,aAAO,MAAM,CAAC;KACf;GACF;;AAED,MAAI,cAAc,CAAC,GAAG,CAAC,EAAE;AACvB,WAAO;AACL,yBAAmB,EAAE,KAAK;AAC1B,yBAAmB,EAAE,KAAK;AAC1B,UAAI,EAAE,IAAI;AACV,cAAQ,EAAE,CAAC,cAAc,CAAC;KAC3B,CAAC;GACH,MAAM;AACL,WAAO;AACL,yBAAmB,EAAE,IAAI;AACzB,yBAAmB,EAAE,IAAI;AACzB,UAAI,EAAE,IAAI;KACX,CAAC;GACH;CACF,CAAC","file":"index-compiled.js","sourcesContent":["var parse = require('spdx-expression-parse');\nvar correct = require('spdx-correct');\n\nvar genericWarning = (\n  'license should be ' +\n  'a valid SPDX license expression (without \"LicenseRef\"), ' +\n  '\"UNLICENSED\", or ' +\n  '\"SEE LICENSE IN <filename>\"'\n);\n\nvar fileReferenceRE = /^SEE LICEN[CS]E IN (.+)$/;\n\nfunction startsWith(prefix, string) {\n  return string.slice(0, prefix.length) === prefix;\n}\n\nfunction usesLicenseRef(ast) {\n  if (ast.hasOwnProperty('license')) {\n    var license = ast.license;\n    return (\n      startsWith('LicenseRef', license) ||\n      startsWith('DocumentRef', license)\n    );\n  } else {\n    return (\n      usesLicenseRef(ast.left) ||\n      usesLicenseRef(ast.right)\n    );\n  }\n}\n\nmodule.exports = function(argument) {\n  var ast;\n\n  try {\n    ast = parse(argument);\n  } catch (e) {\n    var match\n    if (\n      argument === 'UNLICENSED' ||\n      argument === 'UNLICENCED'\n    ) {\n      return {\n        validForOldPackages: true,\n        validForNewPackages: true,\n        unlicensed: true\n      };\n    } else if (match = fileReferenceRE.exec(argument)) {\n      return {\n        validForOldPackages: true,\n        validForNewPackages: true,\n        inFile: match[1]\n      };\n    } else {\n      var result = {\n        validForOldPackages: false,\n        validForNewPackages: false,\n        warnings: [genericWarning]\n      };\n      var corrected = correct(argument);\n      if (corrected) {\n        result.warnings.push(\n          'license is similar to the valid expression \"' + corrected + '\"'\n        );\n      }\n      return result;\n    }\n  }\n\n  if (usesLicenseRef(ast)) {\n    return {\n      validForNewPackages: false,\n      validForOldPackages: false,\n      spdx: true,\n      warnings: [genericWarning]\n    };\n  } else {\n    return {\n      validForNewPackages: true,\n      validForOldPackages: true,\n      spdx: true\n    };\n  }\n};\n"]}