{"version":3,"sources":["scoped.js"],"names":[],"mappings":";;AAAA,IAAI,IAAI,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,IAAI,CAAA;;AAE9B,IAAI,YAAY,GAAG,OAAO,CAAC,iBAAiB,CAAC,CAAC,YAAY,CAAA;AAC1D,IAAI,WAAW,GAAG,OAAO,CAAC,iBAAiB,CAAC,CAAC,WAAW,CAAA;;AAExD,IAAI,CAAC,yCAAyC,EAAE,UAAU,CAAC,EAAE;AAC3D,MAAI,IAAI,GAAG,EAAC,IAAI,EAAG,cAAc,EAAC,CAAA;AAClC,cAAY,CAAC,IAAI,EAAE,KAAK,CAAC,CAAA;AACzB,GAAC,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,cAAc,EAAE,oBAAoB,CAAC,CAAA;;AAExD,GAAC,CAAC,GAAG,EAAE,CAAA;CACR,CAAC,CAAA;;AAEF,IAAI,CAAC,mCAAmC,EAAE,UAAU,CAAC,EAAE;AACrD,GAAC,CAAC,MAAM,CAAC,YAAY;AACnB,gBAAY,CAAC,EAAC,IAAI,EAAG,aAAa,EAAC,EAAE,KAAK,CAAC,CAAA;GAC5C,EAAE,sBAAsB,CAAC,CAAA;;AAE1B,GAAC,CAAC,GAAG,EAAE,CAAA;CACR,CAAC,CAAA;;AAEF,IAAI,CAAC,mCAAmC,EAAE,UAAU,CAAC,EAAE;AACrD,GAAC,CAAC,MAAM,CAAC,YAAY;AACnB,gBAAY,CAAC,EAAC,IAAI,EAAG,aAAa,EAAC,EAAE,KAAK,CAAC,CAAA;GAC5C,EAAE,sBAAsB,CAAC,CAAA;;AAE1B,GAAC,CAAC,GAAG,EAAE,CAAA;CACR,CAAC,CAAA;;AAEF,IAAI,CAAC,wCAAwC,EAAE,UAAU,CAAC,EAAE;AAC1D,GAAC,CAAC,MAAM,CAAC,YAAY;AACnB,gBAAY,CAAC,EAAC,IAAI,EAAG,kBAAkB,EAAC,EAAE,KAAK,CAAC,CAAA;GACjD,EAAE,sBAAsB,CAAC,CAAA;;AAE1B,GAAC,CAAC,GAAG,EAAE,CAAA;CACR,CAAC,CAAA;;AAEF,IAAI,CAAC,6BAA6B,EAAE,UAAU,CAAC,EAAE;AAC/C,GAAC,CAAC,MAAM,CAAC,YAAY;AACnB,gBAAY,CAAC,EAAC,IAAI,EAAG,OAAO,EAAC,EAAE,KAAK,CAAC,CAAA;GACtC,EAAE,sBAAsB,CAAC,CAAA;;AAE1B,GAAC,CAAC,GAAG,EAAE,CAAA;CACR,CAAC,CAAA;;AAEF,IAAI,CAAC,iCAAiC,EAAE,UAAU,CAAC,EAAE;AACnD,GAAC,CAAC,MAAM,CAAC,YAAY;AACnB,gBAAY,CAAC,EAAC,IAAI,EAAG,WAAW,EAAC,EAAE,KAAK,CAAC,CAAA;GAC1C,EAAE,sBAAsB,CAAC,CAAA;;AAE1B,GAAC,CAAC,GAAG,EAAE,CAAA;CACR,CAAC,CAAA;;AAEF,IAAI,CAAC,6DAA6D,EAAE,UAAU,CAAC,EAAE;AAC/E,MAAI,GAAG,GAAG,EAAC,IAAI,EAAG,cAAc,EAAE,GAAG,EAAE,QAAQ,EAAC,CAAA;AAChD,aAAW,CAAC,GAAG,CAAC,CAAA;AAChB,GAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,EAAC,OAAO,EAAE,QAAQ,EAAC,CAAC,CAAA;AACxC,GAAC,CAAC,GAAG,EAAE,CAAA;CACR,CAAC,CAAA","file":"scoped-compiled.js","sourcesContent":["var test = require(\"tap\").test\n\nvar fixNameField = require(\"../lib/fixer.js\").fixNameField\nvar fixBinField = require(\"../lib/fixer.js\").fixBinField\n\ntest(\"a simple scoped module has a valid name\", function (t) {\n  var data = {name : \"@org/package\"}\n  fixNameField(data, false)\n  t.equal(data.name, \"@org/package\", \"name was unchanged\")\n\n  t.end()\n})\n\ntest(\"'org@package' is not a valid name\", function (t) {\n  t.throws(function () {\n    fixNameField({name : \"org@package\"}, false)\n  }, \"blows up as expected\")\n\n  t.end()\n})\n\ntest(\"'org=package' is not a valid name\", function (t) {\n  t.throws(function () {\n    fixNameField({name : \"org=package\"}, false)\n  }, \"blows up as expected\")\n\n  t.end()\n})\n\ntest(\"'@org=sub/package' is not a valid name\", function (t) {\n  t.throws(function () {\n    fixNameField({name : \"@org=sub/package\"}, false)\n  }, \"blows up as expected\")\n\n  t.end()\n})\n\ntest(\"'@org/' is not a valid name\", function (t) {\n  t.throws(function () {\n    fixNameField({name : \"@org/\"}, false)\n  }, \"blows up as expected\")\n\n  t.end()\n})\n\ntest(\"'@/package' is not a valid name\", function (t) {\n  t.throws(function () {\n    fixNameField({name : \"@/package\"}, false)\n  }, \"blows up as expected\")\n\n  t.end()\n})\n\ntest(\"name='@org/package', bin='bin.js' is bin={package:'bin.js'}\", function (t) {\n  var obj = {name : \"@org/package\", bin: \"bin.js\"}\n  fixBinField(obj)\n  t.isDeeply(obj.bin, {package: 'bin.js'})\n  t.end()\n})\n"]}