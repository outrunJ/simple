{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["var licenseIDs = require('spdx-license-ids');\n\nfunction valid(string) {\n  return licenseIDs.indexOf(string) > -1;\n}\n\n// Common transpositions of license identifier acronyms\nvar transpositions = [\n  ['APGL', 'AGPL'],\n  ['Gpl', 'GPL'],\n  ['GLP', 'GPL'],\n  ['APL', 'Apache'],\n  ['ISD', 'ISC'],\n  ['GLP', 'GPL'],\n  ['IST', 'ISC'],\n  ['Claude', 'Clause'],\n  [' or later', '+'],\n  [' International', ''],\n  ['GNU', 'GPL'],\n  ['GUN', 'GPL'],\n  ['+', ''],\n  ['GNU GPL', 'GPL'],\n  ['GNU/GPL', 'GPL'],\n  ['GNU GLP', 'GPL'],\n  ['GNU General Public License', 'GPL'],\n  ['Gnu public license', 'GPL'],\n  ['GNU Public License', 'GPL'],\n  ['GNU GENERAL PUBLIC LICENSE', 'GPL'],\n  ['MTI', 'MIT'],\n  ['Mozilla Public License', 'MPL'],\n  ['WTH', 'WTF'],\n  ['-License', '']\n];\n\nvar TRANSPOSED = 0;\nvar CORRECT = 1;\n\n// Simple corrections to nearly valid identifiers.\nvar transforms = [\n  // e.g. 'mit'\n  function(argument) {\n    return argument.toUpperCase();\n  },\n  // e.g. 'MIT '\n  function(argument) {\n    return argument.trim();\n  },\n  // e.g. 'M.I.T.'\n  function(argument) {\n    return argument.replace(/\\./g, '');\n  },\n  // e.g. 'Apache- 2.0'\n  function(argument) {\n    return argument.replace(/\\s+/g, '');\n  },\n  // e.g. 'CC BY 4.0''\n  function(argument) {\n    return argument.replace(/\\s+/g, '-');\n  },\n  // e.g. 'LGPLv2.1'\n  function(argument) {\n    return argument.replace('v', '-');\n  },\n  // e.g. 'Apache 2.0'\n  function(argument) {\n    return argument.replace(/,?\\s*(\\d)/, '-$1');\n  },\n  // e.g. 'GPL 2'\n  function(argument) {\n    return argument.replace(/,?\\s*(\\d)/, '-$1.0');\n  },\n  // e.g. 'Apache Version 2.0'\n  function(argument) {\n    return argument.replace(/,?\\s*(V\\.|v\\.|V|v|Version|version)\\s*(\\d)/, '-$2');\n  },\n  // e.g. 'Apache Version 2'\n  function(argument) {\n    return argument.replace(/,?\\s*(V\\.|v\\.|V|v|Version|version)\\s*(\\d)/, '-$2.0');\n  },\n  // e.g. 'ZLIB'\n  function(argument) {\n    return argument[0].toUpperCase() + argument.slice(1);\n  },\n  // e.g. 'MPL/2.0'\n  function(argument) {\n    return argument.replace('/', '-');\n  },\n  // e.g. 'Apache 2'\n  function(argument) {\n    return argument\n      .replace(/\\s*V\\s*(\\d)/, '-$1')\n      .replace(/(\\d)$/, '$1.0');\n  },\n  // e.g. 'GPL-2.0-'\n  function(argument) {\n    return argument.slice(0, argument.length - 1);\n  },\n  // e.g. 'GPL2'\n  function(argument) {\n    return argument.replace(/(\\d)$/, '-$1.0');\n  },\n  // e.g. 'BSD 3'\n  function(argument) {\n    return argument.replace(/(-| )?(\\d)$/, '-$2-Clause');\n  },\n  // e.g. 'BSD clause 3'\n  function(argument) {\n    return argument.replace(/(-| )clause(-| )(\\d)/, '-$3-Clause');\n  },\n  // e.g. 'BY-NC-4.0'\n  function(argument) {\n    return 'CC-' + argument;\n  },\n  // e.g. 'BY-NC'\n  function(argument) {\n    return 'CC-' + argument + '-4.0';\n  },\n  // e.g. 'Attribution-NonCommercial'\n  function(argument) {\n    return argument\n      .replace('Attribution', 'BY')\n      .replace('NonCommercial', 'NC')\n      .replace('NoDerivatives', 'ND')\n      .replace(/ (\\d)/, '-$1')\n      .replace(/ ?International/, '');\n  },\n  // e.g. 'Attribution-NonCommercial'\n  function(argument) {\n    return 'CC-' +\n      argument\n      .replace('Attribution', 'BY')\n      .replace('NonCommercial', 'NC')\n      .replace('NoDerivatives', 'ND')\n      .replace(/ (\\d)/, '-$1')\n      .replace(/ ?International/, '') +\n      '-4.0';\n  }\n];\n\n// If all else fails, guess that strings containing certain substrings\n// meant to identify certain licenses.\nvar lastResorts = [\n  ['UNLI', 'Unlicense'],\n  ['WTF', 'WTFPL'],\n  ['2 CLAUSE', 'BSD-2-Clause'],\n  ['2-CLAUSE', 'BSD-2-Clause'],\n  ['3 CLAUSE', 'BSD-3-Clause'],\n  ['3-CLAUSE', 'BSD-3-Clause'],\n  ['AFFERO', 'AGPL-3.0'],\n  ['AGPL', 'AGPL-3.0'],\n  ['APACHE', 'Apache-2.0'],\n  ['ARTISTIC', 'Artistic-2.0'],\n  ['Affero', 'AGPL-3.0'],\n  ['BEER', 'Beerware'],\n  ['BOOST', 'BSL-1.0'],\n  ['BSD', 'BSD-2-Clause'],\n  ['ECLIPSE', 'EPL-1.0'],\n  ['FUCK', 'WTFPL'],\n  ['GNU', 'GPL-3.0'],\n  ['LGPL', 'LGPL-3.0'],\n  ['GPL', 'GPL-3.0'],\n  ['MIT', 'MIT'],\n  ['MPL', 'MPL-2.0'],\n  ['X11', 'X11'],\n  ['ZLIB', 'Zlib']\n];\n\nvar SUBSTRING = 0;\nvar IDENTIFIER = 1;\n\nvar validTransformation = function(identifier) {\n  for (var i = 0; i < transforms.length; i++) {\n    var transformed = transforms[i](identifier);\n    if (transformed !== identifier && valid(transformed)) {\n      return transformed;\n    }\n  }\n  return null;\n};\n\nvar validLastResort = function(identifier) {\n  var upperCased = identifier.toUpperCase();\n  for (var i = 0; i < lastResorts.length; i++) {\n    var lastResort = lastResorts[i];\n    if (upperCased.indexOf(lastResort[SUBSTRING]) > -1) {\n      return lastResort[IDENTIFIER];\n    }\n  }\n  return null;\n};\n\nvar anyCorrection = function(identifier, check) {\n  for (var i = 0; i < transpositions.length; i++) {\n    var transposition = transpositions[i];\n    var transposed = transposition[TRANSPOSED];\n    if (identifier.indexOf(transposed) > -1) {\n      var corrected = identifier.replace(\n        transposed,\n        transposition[CORRECT]\n      );\n      var checked = check(corrected);\n      if (checked !== null) {\n        return checked;\n      }\n    }\n  }\n  return null;\n};\n\nmodule.exports = function(identifier) {\n  identifier = identifier.replace(/\\+$/, '');\n  if (valid(identifier)) {\n    return identifier;\n  }\n  var transformed = validTransformation(identifier);\n  if (transformed !== null) {\n    return transformed;\n  }\n  transformed = anyCorrection(identifier, function(argument) {\n    if (valid(argument)) {\n      return argument;\n    }\n    return validTransformation(argument);\n  });\n  if (transformed !== null) {\n    return transformed;\n  }\n  transformed = validLastResort(identifier);\n  if (transformed !== null) {\n    return transformed;\n  }\n  transformed = anyCorrection(identifier, validLastResort);\n  if (transformed !== null) {\n    return transformed;\n  }\n  return null;\n};\n"]}