{"version":3,"sources":["change-code.js"],"names":[],"mappings":"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","file":"change-code-compiled.js","sourcesContent":["if (process.argv.length === 2) {\n  var types = [ 'explicit', 'code', 'normal' ]\n  var codes = [ 0, 2, 'null' ]\n  var changes = [ 'nochange', 'change', 'code', 'twice', 'twicecode']\n  var handlers = [ 'sigexit', 'nosigexit' ]\n  var opts = []\n  types.forEach(function (type) {\n    var testCodes = type === 'normal' ? [ 0 ] : codes\n    testCodes.forEach(function (code) {\n      changes.forEach(function (change) {\n        handlers.forEach(function (handler) {\n          opts.push([type, code, change, handler].join(' '))\n        })\n      })\n    })\n  })\n\n  var results = {}\n\n  var exec = require('child_process').exec\n  run(opts.shift())\n} else {\n  var type = process.argv[2]\n  var code = +process.argv[3]\n  var change = process.argv[4]\n  var sigexit = process.argv[5] !== 'nosigexit'\n\n  if (sigexit) {\n    var onSignalExit = require('../../')\n    onSignalExit(listener)\n  } else {\n    process.on('exit', listener)\n  }\n\n  process.on('exit', function (code) {\n    console.error('first code=%j', code)\n  })\n\n  if (change !== 'nochange') {\n    process.once('exit', function (code) {\n      console.error('set code from %j to %j', code, 5)\n      if (change === 'code' || change === 'twicecode') {\n        process.exitCode = 5\n      } else {\n        process.exit(5)\n      }\n    })\n    if (change === 'twicecode' || change === 'twice') {\n      process.once('exit', function (code) {\n        code = process.exitCode || code\n        console.error('set code from %j to %j', code, code + 1)\n        process.exit(code + 1)\n      })\n    }\n  }\n\n  process.on('exit', function (code) {\n    console.error('second code=%j', code)\n  })\n\n  if (type === 'explicit') {\n    if (code || code === 0) {\n      process.exit(code)\n    } else {\n      process.exit()\n    }\n  } else if (type === 'code') {\n    process.exitCode = +code || 0\n  }\n}\n\nfunction listener (code, signal) {\n  signal = signal || null\n  console.log('%j', { code: code, signal: signal, exitCode: process.exitCode || 0 })\n}\n\nfunction run (opt) {\n  console.error(opt)\n  exec(process.execPath + ' ' + __filename + ' ' + opt, function (err, stdout, stderr) {\n    var res = JSON.parse(stdout)\n    if (err) {\n      res.actualCode = err.code\n      res.actualSignal = err.signal\n    } else {\n      res.actualCode = 0\n      res.actualSignal = null\n    }\n    res.stderr = stderr.trim().split('\\n')\n    results[opt] = res\n    if (opts.length) {\n      run(opts.shift())\n    } else {\n      console.log(JSON.stringify(results, null, 2))\n    }\n  })\n}\n"]}