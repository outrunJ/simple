{"version":3,"sources":["git-host.js"],"names":[],"mappings":"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","file":"git-host-compiled.js","sourcesContent":["'use strict'\nvar gitHosts = require('./git-host-info.js')\n\nvar GitHost = module.exports = function (type, user, auth, project, committish, defaultRepresentation) {\n  var gitHostInfo = this\n  gitHostInfo.type = type\n  Object.keys(gitHosts[type]).forEach(function (key) {\n    gitHostInfo[key] = gitHosts[type][key]\n  })\n  gitHostInfo.user = user\n  gitHostInfo.auth = auth\n  gitHostInfo.project = project\n  gitHostInfo.committish = committish\n  gitHostInfo.default = defaultRepresentation\n}\nGitHost.prototype = {}\n\nGitHost.prototype.hash = function () {\n  return this.committish ? '#' + this.committish : ''\n}\n\nGitHost.prototype._fill = function (template, vars) {\n  if (!template) return\n  if (!vars) vars = {}\n  var self = this\n  Object.keys(this).forEach(function (key) {\n    if (self[key] != null && vars[key] == null) vars[key] = self[key]\n  })\n  var rawAuth = vars.auth\n  var rawComittish = vars.committish\n  Object.keys(vars).forEach(function (key) {\n    vars[key] = encodeURIComponent(vars[key])\n  })\n  vars['auth@'] = rawAuth ? rawAuth + '@' : ''\n  vars['#committish'] = rawComittish ? '#' + rawComittish : ''\n  vars['/tree/committish'] = vars.committish\n                          ? '/' + vars.treepath + '/' + vars.committish\n                          : ''\n  vars['/committish'] = vars.committish ? '/' + vars.committish : ''\n  vars.committish = vars.committish || 'master'\n  var res = template\n  Object.keys(vars).forEach(function (key) {\n    res = res.replace(new RegExp('[{]' + key + '[}]', 'g'), vars[key])\n  })\n  return res\n}\n\nGitHost.prototype.ssh = function () {\n  return this._fill(this.sshtemplate)\n}\n\nGitHost.prototype.sshurl = function () {\n  return this._fill(this.sshurltemplate)\n}\n\nGitHost.prototype.browse = function () {\n  return this._fill(this.browsetemplate)\n}\n\nGitHost.prototype.docs = function () {\n  return this._fill(this.docstemplate)\n}\n\nGitHost.prototype.bugs = function () {\n  return this._fill(this.bugstemplate)\n}\n\nGitHost.prototype.https = function () {\n  return this._fill(this.httpstemplate)\n}\n\nGitHost.prototype.git = function () {\n  return this._fill(this.gittemplate)\n}\n\nGitHost.prototype.shortcut = function () {\n  return this._fill(this.shortcuttemplate)\n}\n\nGitHost.prototype.path = function () {\n  return this._fill(this.pathtemplate)\n}\n\nGitHost.prototype.file = function (P) {\n  return this._fill(this.filetemplate, {\n    path: P.replace(/^[/]+/g, '')\n  })\n}\n\nGitHost.prototype.getDefaultRepresentation = function () {\n  return this.default\n}\n\nGitHost.prototype.toString = function () {\n  return (this[this.default] || this.sshurl).call(this)\n}\n"]}