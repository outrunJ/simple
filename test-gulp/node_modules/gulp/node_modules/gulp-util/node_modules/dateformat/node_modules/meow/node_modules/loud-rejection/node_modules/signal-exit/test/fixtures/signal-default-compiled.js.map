{"version":3,"sources":["signal-default.js"],"names":[],"mappings":"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","file":"signal-default-compiled.js","sourcesContent":["// This fixture is not used in any tests.  It is here merely as a way to\n// do research into the various signal behaviors on Linux and Darwin.\n// Run with no args to cycle through every signal type.  Run with a signal\n// arg to learn about how that signal behaves.\n\nif (process.argv[2]) {\n  child(process.argv[2])\n} else {\n  var signals = [\n    'SIGABRT',\n    'SIGALRM',\n    'SIGBUS',\n    'SIGCHLD',\n    'SIGCLD',\n    'SIGCONT',\n    'SIGEMT',\n    'SIGFPE',\n    'SIGHUP',\n    'SIGILL',\n    'SIGINFO',\n    'SIGINT',\n    'SIGIO',\n    'SIGIOT',\n    'SIGKILL',\n    'SIGLOST',\n    'SIGPIPE',\n    'SIGPOLL',\n    'SIGPROF',\n    'SIGPWR',\n    'SIGQUIT',\n    'SIGSEGV',\n    'SIGSTKFLT',\n    'SIGSTOP',\n    'SIGSYS',\n    'SIGTERM',\n    'SIGTRAP',\n    'SIGTSTP',\n    'SIGTTIN',\n    'SIGTTOU',\n    'SIGUNUSED',\n    'SIGURG',\n    'SIGUSR1',\n    'SIGUSR2',\n    'SIGVTALRM',\n    'SIGWINCH',\n    'SIGXCPU',\n    'SIGXFSZ'\n  ]\n\n  var spawn = require('child_process').spawn\n  ;(function test (signal) {\n    if (!signal) {\n      return\n    }\n    var child = spawn(process.execPath, [__filename, signal], { stdio: 'inherit' })\n    var timer = setTimeout(function () {\n      console.log('requires SIGCONT')\n      process.kill(child.pid, 'SIGCONT')\n    }, 750)\n\n    child.on('close', function (code, signal) {\n      console.log('code=%j signal=%j\\n', code, signal)\n      clearTimeout(timer)\n      test(signals.pop())\n    })\n  })(signals.pop())\n}\n\nfunction child (signal) {\n  console.log('signal=%s', signal)\n\n  // set a timeout so we know whether or not the process terminated.\n  setTimeout(function () {\n    console.log('not terminated')\n  }, 200)\n\n  process.on('exit', function (code) {\n    console.log('emit exit code=%j', code)\n  })\n\n  try {\n    process.on(signal, function fn () {\n      console.log('signal is catchable', signal)\n      process.removeListener(signal, fn)\n      setTimeout(function () {\n        console.error('signal again')\n        process.kill(process.pid, signal)\n      })\n    })\n  } catch (er) {\n    console.log('not listenable')\n  }\n\n  try {\n    process.kill(process.pid, signal)\n  } catch (er) {\n    console.log('not issuable')\n  }\n}\n"]}