{"version":3,"sources":["unwrap.js"],"names":[],"mappings":";;;;;;AAIA,IAAI,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE;AACvB,MAAI,OAAO,GAAG,OAAO,CAAC,uBAAuB,CAAA;AAC7C,MAAI,SAAS,GAAG,OAAO,CAAC,SAAS,CAAC,WAAW,CAAC,CAAA;AAC9C,SAAO,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAA;AACpC,SAAO,OAAO,CAAC,uBAAuB,CAAA;AACtC,SAAO,OAAO,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAA;CAC3D;;AAED,IAAI,YAAY,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAA;AACpC,IAAI,OAAO,GAAG,CAAC,CAAA;;AAEf,IAAI,MAAM,GAAG,YAAY,CAAC,UAAU,IAAI,EAAE,MAAM,EAAE;AAChD,SAAO,EAAE,CAAA;AACT,SAAO,CAAC,GAAG,CAAC,qCAAqC,EACrC,OAAO,EAAE,IAAI,EAAE,MAAM,CAAC,CAAA;CACnC,EAAE,EAAC,UAAU,EAAE,IAAI,EAAC,CAAC,CAAA;AACtB,MAAM,EAAE,CAAA;;AAER,MAAM,GAAG,YAAY,CAAC,UAAU,IAAI,EAAE,MAAM,EAAE;AAC5C,SAAO,EAAE,CAAA;AACT,SAAO,CAAC,GAAG,CAAC,sCAAsC,EACtC,OAAO,EAAE,IAAI,EAAE,MAAM,CAAC,CAAA;CACnC,CAAC,CAAA;AACF,MAAM,EAAE,CAAA;;AAER,IAAI,MAAM,CAAC,YAAY,IAAI,SAAS,IAAI,SAAS,CAAC,MAAM,EAAE;AACxD,WAAS,CAAC,OAAO,CAAC,UAAU,EAAE,EAAE;AAC9B,gBAAY,CAAC,EAAE,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC,CAAA;GACvC,CAAC,CAAA;CACH;;AAED,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAA;AACnC,UAAU,CAAC,YAAY,EAAE,EAAE,IAAI,CAAC,CAAA","file":"unwrap-compiled.js","sourcesContent":["// simulate cases where the module could be loaded from multiple places\n\n// Need to lie about this a little bit, since nyc uses this module\n// for its coverage wrap-up handling\nif (process.env.NYC_CWD) {\n  var emitter = process.__signal_exit_emitter__\n  var listeners = emitter.listeners('afterexit')\n  process.removeAllListeners('SIGHUP')\n  delete process.__signal_exit_emitter__\n  delete require('module')._cache[require.resolve('../../')]\n}\n\nvar onSignalExit = require('../../')\nvar counter = 0\n\nvar unwrap = onSignalExit(function (code, signal) {\n  counter++\n  console.log('last counter=%j, code=%j, signal=%j',\n              counter, code, signal)\n}, {alwaysLast: true})\nunwrap()\n\nunwrap = onSignalExit(function (code, signal) {\n  counter++\n  console.log('first counter=%j, code=%j, signal=%j',\n              counter, code, signal)\n})\nunwrap()\n\nif (global.__coverage__ && listeners && listeners.length) {\n  listeners.forEach(function (fn) {\n    onSignalExit(fn, { alwaysLast: true })\n  })\n}\n\nprocess.kill(process.pid, 'SIGHUP')\nsetTimeout(function () {}, 1000)\n"]}