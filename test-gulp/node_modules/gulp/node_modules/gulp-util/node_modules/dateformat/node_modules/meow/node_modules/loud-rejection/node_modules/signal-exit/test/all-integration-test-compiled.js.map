{"version":3,"sources":["all-integration-test.js"],"names":[],"mappings":"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","file":"all-integration-test-compiled.js","sourcesContent":["/* global describe, it */\n\nvar exec = require('child_process').exec,\n  assert = require('assert')\n\nrequire('chai').should()\nrequire('tap').mochaGlobals()\n\nvar onSignalExit = require('../')\n\ndescribe('all-signals-integration-test', function () {\n\n  // These are signals that are aliases for other signals, so\n  // the result will sometimes be one of the others.  For these,\n  // we just verify that we GOT a signal, not what it is.\n  function weirdSignal (sig) {\n    return sig === 'SIGIOT' ||\n      sig === 'SIGIO' ||\n      sig === 'SIGSYS' ||\n      sig === 'SIGIOT' ||\n      sig === 'SIGABRT' ||\n      sig === 'SIGPOLL' ||\n      sig === 'SIGUNUSED'\n  }\n\n  // Exhaustively test every signal, and a few numbers.\n  var signals = onSignalExit.signals()\n  signals.concat('', 0, 1, 2, 3, 54).forEach(function (sig) {\n    var node = process.execPath\n    var js = require.resolve('./fixtures/exiter.js')\n    it('exits properly: ' + sig, function (done) {\n      // travis has issues with SIGUSR1 on Node 0.x.10.\n      if (process.env.TRAVIS && sig === 'SIGUSR1') return done()\n\n      exec(node + ' ' + js + ' ' + sig, function (err, stdout, stderr) {\n        if (sig) {\n          assert(err)\n          if (!isNaN(sig)) {\n            assert.equal(err.code, sig)\n          } else if (!weirdSignal(sig)) {\n            if (!process.env.TRAVIS) err.signal.should.equal(sig)\n          } else if (sig) {\n            if (!process.env.TRAVIS) assert(err.signal)\n          }\n        } else {\n          assert.ifError(err)\n        }\n\n        try {\n          var data = JSON.parse(stdout)\n        } catch (er) {\n          console.error('invalid json: %j', stdout, stderr)\n          throw er\n        }\n\n        if (weirdSignal(sig)) {\n          data.wanted[1] = true\n          data.found[1] = !!data.found[1]\n        }\n        assert.deepEqual(data.found, data.wanted)\n        done()\n      })\n    })\n  })\n\n  signals.forEach(function (sig) {\n    var node = process.execPath\n    var js = require.resolve('./fixtures/parent.js')\n    it('exits properly: (external sig) ' + sig, function (done) {\n      // travis has issues with SIGUSR1 on Node 0.x.10.\n      if (process.env.TRAVIS && sig === 'SIGUSR1') return done()\n\n      var cmd = node + ' ' + js + ' ' + sig\n      exec(cmd, function (err, stdout, stderr) {\n        assert.ifError(err)\n        try {\n          var data = JSON.parse(stdout)\n        } catch (er) {\n          console.error('invalid json: %j', stdout, stderr)\n          throw er\n        }\n\n        if (weirdSignal(sig)) {\n          data.wanted[1] = true\n          data.found[1] = !!data.found[1]\n          data.external[1] = !!data.external[1]\n        }\n        assert.deepEqual(data.found, data.wanted)\n        assert.deepEqual(data.external, data.wanted)\n        done()\n      })\n    })\n  })\n})\n"]}