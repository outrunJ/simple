{"version":3,"sources":["index.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AACb,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC3B,IAAI,UAAU,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;AACxC,IAAI,OAAO,GAAG,OAAO,CAAC,gBAAgB,CAAC,CAAC;;AAExC,SAAS,SAAS,CAAC,CAAC,EAAE;AACrB,QAAO,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;CAC7C;;AAED,SAAS,IAAI,CAAC,KAAK,EAAE,QAAQ,EAAE;AAC9B,QAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,GAAG,QAAQ,CAAC;CAClD;;AAED,MAAM,CAAC,OAAO,GAAG,UAAU,QAAQ,EAAE,IAAI,EAAE;AAC1C,KAAI,GAAG,IAAI,IAAI,EAAE,CAAC;;AAElB,KAAI,KAAK,GAAG,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;;AAEhC,QAAO,IAAI,OAAO,CAAC,UAAU,OAAO,EAAE;AACrC,GAAC,SAAS,IAAI,GAAG;AAChB,OAAI,EAAE,GAAG,IAAI,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;;AAE/B,aAAU,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,MAAM,EAAE;AACrC,QAAI,MAAM,EAAE;AACX,YAAO,CAAC,EAAE,CAAC,CAAC;KACZ,MAAM,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,EAAE;AACxB,YAAO,CAAC,IAAI,CAAC,CAAC;KACd,MAAM;AACN,SAAI,EAAE,CAAC;KACP;IACD,CAAC,CAAC;GACH,CAAA,EAAG,CAAC;EACL,CAAC,CAAC;CACH,CAAC;;AAEF,MAAM,CAAC,OAAO,CAAC,IAAI,GAAG,UAAU,QAAQ,EAAE,IAAI,EAAE;AAC/C,KAAI,GAAG,IAAI,IAAI,EAAE,CAAC;;AAElB,KAAI,KAAK,GAAG,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAChC,KAAI,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC;;AAEvB,QAAO,GAAG,EAAE,EAAE;AACb,MAAI,EAAE,GAAG,IAAI,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;;AAE/B,MAAI,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE;AACxB,UAAO,EAAE,CAAC;GACV;;AAED,OAAK,CAAC,GAAG,EAAE,CAAC;EACZ;;AAED,QAAO,IAAI,CAAC;CACZ,CAAC","file":"index-compiled.js","sourcesContent":["'use strict';\nvar path = require('path');\nvar pathExists = require('path-exists');\nvar Promise = require('pinkie-promise');\n\nfunction splitPath(x) {\n\treturn path.resolve(x || '').split(path.sep);\n}\n\nfunction join(parts, filename) {\n\treturn parts.join(path.sep) + path.sep + filename;\n}\n\nmodule.exports = function (filename, opts) {\n\topts = opts || {};\n\n\tvar parts = splitPath(opts.cwd);\n\n\treturn new Promise(function (resolve) {\n\t\t(function find() {\n\t\t\tvar fp = join(parts, filename);\n\n\t\t\tpathExists(fp).then(function (exists) {\n\t\t\t\tif (exists) {\n\t\t\t\t\tresolve(fp);\n\t\t\t\t} else if (!parts.pop()) {\n\t\t\t\t\tresolve(null);\n\t\t\t\t} else {\n\t\t\t\t\tfind();\n\t\t\t\t}\n\t\t\t});\n\t\t})();\n\t});\n};\n\nmodule.exports.sync = function (filename, opts) {\n\topts = opts || {};\n\n\tvar parts = splitPath(opts.cwd);\n\tvar len = parts.length;\n\n\twhile (len--) {\n\t\tvar fp = join(parts, filename);\n\n\t\tif (pathExists.sync(fp)) {\n\t\t\treturn fp;\n\t\t}\n\n\t\tparts.pop();\n\t}\n\n\treturn null;\n};\n"]}