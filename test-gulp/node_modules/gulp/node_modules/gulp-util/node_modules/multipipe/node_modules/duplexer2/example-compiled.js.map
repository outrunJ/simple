{"version":3,"sources":["example.js"],"names":[],"mappings":";;AAEA,IAAI,MAAM,GAAG,OAAO,CAAC,iBAAiB,CAAC,CAAC;;AAExC,IAAI,SAAS,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;;AAE9B,IAAI,QAAQ,GAAG,IAAI,MAAM,CAAC,QAAQ,CAAC,EAAC,UAAU,EAAE,IAAI,EAAC,CAAC;IAClD,QAAQ,GAAG,IAAI,MAAM,CAAC,QAAQ,CAAC,EAAC,UAAU,EAAE,IAAI,EAAC,CAAC,CAAC;;AAEvD,QAAQ,CAAC,MAAM,GAAG,SAAS,MAAM,CAAC,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE;AACvD,MAAI,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;AACxB,WAAO,IAAI,EAAE,CAAC;GACf,MAAM;AACL,YAAQ,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;GAC9B;CACF,CAAC;;AAEF,QAAQ,CAAC,KAAK,GAAG,SAAS,KAAK,CAAC,CAAC,EAAE;;CAElC;;;AAAC,AAGF,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,YAAW;AACjC,YAAU,CAAC,YAAW;AACpB,YAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;GACrB,EAAE,GAAG,CAAC,CAAC;CACT,CAAC,CAAC;;AAEH,IAAI,MAAM,GAAG,SAAS,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;;AAE3C,MAAM,CAAC,EAAE,CAAC,MAAM,EAAE,UAAS,CAAC,EAAE;AAC5B,SAAO,CAAC,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;CAC5C,CAAC,CAAC;;AAEH,MAAM,CAAC,EAAE,CAAC,QAAQ,EAAE,YAAW;AAC7B,SAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;CACjC,CAAC,CAAC;;AAEH,MAAM,CAAC,EAAE,CAAC,KAAK,EAAE,YAAW;AAC1B,SAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;CAC9B,CAAC,CAAC;;AAEH,MAAM,CAAC,KAAK,CAAC,cAAc,EAAE,YAAW;AACtC,SAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;CACjC,CAAC,CAAC;;AAEH,MAAM,CAAC,GAAG,CAAC,YAAW;AACpB,SAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;CAChC,CAAC,CAAC","file":"example-compiled.js","sourcesContent":["#!/usr/bin/env node\n\nvar stream = require(\"readable-stream\");\n\nvar duplexer2 = require(\"./\");\n\nvar writable = new stream.Writable({objectMode: true}),\n    readable = new stream.Readable({objectMode: true});\n\nwritable._write = function _write(input, encoding, done) {\n  if (readable.push(input)) {\n    return done();\n  } else {\n    readable.once(\"drain\", done);\n  }\n};\n\nreadable._read = function _read(n) {\n  // no-op\n};\n\n// simulate the readable thing closing after a bit\nwritable.once(\"finish\", function() {\n  setTimeout(function() {\n    readable.push(null);\n  }, 500);\n});\n\nvar duplex = duplexer2(writable, readable);\n\nduplex.on(\"data\", function(e) {\n  console.log(\"got data\", JSON.stringify(e));\n});\n\nduplex.on(\"finish\", function() {\n  console.log(\"got finish event\");\n});\n\nduplex.on(\"end\", function() {\n  console.log(\"got end event\");\n});\n\nduplex.write(\"oh, hi there\", function() {\n  console.log(\"finished writing\");\n});\n\nduplex.end(function() {\n  console.log(\"finished ending\");\n});\n"]}