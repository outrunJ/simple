{"version":3,"sources":["index.js"],"names":[],"mappings":";;AAAA,IAAI,MAAM,GAAG,OAAO,CAAC,iBAAiB,CAAC,CAAC;;AAExC,IAAI,OAAO,GAAG,MAAM,CAAC,OAAO,GAAG,SAAS,OAAO,CAAC,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE;AAC3E,SAAO,IAAI,aAAa,CAAC,OAAO,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;CACvD,CAAC;;AAEF,IAAI,aAAa,GAAG,OAAO,CAAC,aAAa,GAAG,SAAS,aAAa,CAAC,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE;AAC9F,MAAI,OAAO,QAAQ,KAAK,WAAW,EAAE;AACnC,YAAQ,GAAG,QAAQ,CAAC;AACpB,YAAQ,GAAG,OAAO,CAAC;AACnB,WAAO,GAAG,IAAI,CAAC;GAChB;;AAED,SAAO,GAAG,OAAO,IAAI,EAAE,CAAC;AACxB,SAAO,CAAC,UAAU,GAAG,IAAI,CAAC;;AAE1B,QAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;;AAElC,MAAI,CAAC,aAAa,GAAG,AAAC,OAAO,OAAO,CAAC,YAAY,KAAK,WAAW,IAAK,CAAC,CAAC,OAAO,CAAC,YAAY,CAAC;;AAE7F,MAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;AAC1B,MAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;;AAE1B,MAAI,IAAI,GAAG,IAAI,CAAC;;AAEhB,UAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,YAAW;AACjC,QAAI,CAAC,GAAG,EAAE,CAAC;GACZ,CAAC,CAAC;;AAEH,MAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,YAAW;AAC7B,YAAQ,CAAC,GAAG,EAAE,CAAC;GAChB,CAAC,CAAC;;AAEH,UAAQ,CAAC,EAAE,CAAC,MAAM,EAAE,UAAS,CAAC,EAAE;AAC9B,QAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE;AACjB,cAAQ,CAAC,KAAK,EAAE,CAAC;KAClB;GACF,CAAC,CAAC;;AAEH,UAAQ,CAAC,IAAI,CAAC,KAAK,EAAE,YAAW;AAC9B,WAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;GACxB,CAAC,CAAC;;AAEH,MAAI,IAAI,CAAC,aAAa,EAAE;AACtB,YAAQ,CAAC,EAAE,CAAC,OAAO,EAAE,UAAS,GAAG,EAAE;AACjC,aAAO,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;KAChC,CAAC,CAAC;;AAEH,YAAQ,CAAC,EAAE,CAAC,OAAO,EAAE,UAAS,GAAG,EAAE;AACjC,aAAO,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;KAChC,CAAC,CAAC;GACJ;CACF,CAAC;AACF,aAAa,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,EAAE,EAAC,WAAW,EAAE,EAAC,KAAK,EAAE,aAAa,EAAC,EAAC,CAAC,CAAC;;AAExG,aAAa,CAAC,SAAS,CAAC,MAAM,GAAG,SAAS,MAAM,CAAC,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE;AACtE,MAAI,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC;CAC7C,CAAC;;AAEF,aAAa,CAAC,SAAS,CAAC,KAAK,GAAG,SAAS,KAAK,CAAC,CAAC,EAAE;AAChD,MAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC;CACzB,CAAC","file":"index-compiled.js","sourcesContent":["var stream = require(\"readable-stream\");\n\nvar duplex2 = module.exports = function duplex2(options, writable, readable) {\n  return new DuplexWrapper(options, writable, readable);\n};\n\nvar DuplexWrapper = exports.DuplexWrapper = function DuplexWrapper(options, writable, readable) {\n  if (typeof readable === \"undefined\") {\n    readable = writable;\n    writable = options;\n    options = null;\n  }\n\n  options = options || {};\n  options.objectMode = true;\n\n  stream.Duplex.call(this, options);\n\n  this._bubbleErrors = (typeof options.bubbleErrors === \"undefined\") || !!options.bubbleErrors;\n\n  this._writable = writable;\n  this._readable = readable;\n\n  var self = this;\n\n  writable.once(\"finish\", function() {\n    self.end();\n  });\n\n  this.once(\"finish\", function() {\n    writable.end();\n  });\n\n  readable.on(\"data\", function(e) {\n    if (!self.push(e)) {\n      readable.pause();\n    }\n  });\n\n  readable.once(\"end\", function() {\n    return self.push(null);\n  });\n\n  if (this._bubbleErrors) {\n    writable.on(\"error\", function(err) {\n      return self.emit(\"error\", err);\n    });\n\n    readable.on(\"error\", function(err) {\n      return self.emit(\"error\", err);\n    });\n  }\n};\nDuplexWrapper.prototype = Object.create(stream.Duplex.prototype, {constructor: {value: DuplexWrapper}});\n\nDuplexWrapper.prototype._write = function _write(input, encoding, done) {\n  this._writable.write(input, encoding, done);\n};\n\nDuplexWrapper.prototype._read = function _read(n) {\n  this._readable.resume();\n};\n"]}