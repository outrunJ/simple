{"version":3,"sources":["field.js"],"names":[],"mappings":";;AAAA,IAAI,UAAU,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC;AAChC,IAAI,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC/B,OAAO,CAAC,OAAO,CAAC,CAAC;;AAEjB,QAAQ,CAAC,SAAS,EAAE,YAAW;AAC7B,IAAE,CAAC,wDAAwD,EAAE,UAAS,IAAI,EAAE;AAC1E,QAAI,OAAO,GAAG,SAAS,CAAC;AACxB,QAAI,KAAK,GAAG;AACV,OAAC,EAAE,CAAC;KACL,CAAC;AACF,QAAI,GAAG,GAAG,EAAE,CAAC;AACb,QAAI,MAAM,GAAG,KAAK,CAAC;AACnB,QAAI,GAAG,GAAG,SAAN,GAAG,CAAY,GAAG,EAAC;AACrB,SAAG,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;AAC1B,YAAM,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AAC3B,YAAM,GAAG,IAAI,CAAC;KACf,CAAC;AACF,cAAU,CAAC,KAAK,CAAC,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;;AAE9C,OAAG,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AACxB,OAAG,CAAC,CAAC,GAAG,IAAI,CAAC;AACb,OAAG,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AACzB,UAAM,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AAC1B,QAAI,EAAE,CAAC;GACR,CAAC,CAAC;AACH,IAAE,CAAC,wDAAwD,EAAE,UAAS,IAAI,EAAE;AAC1E,QAAI,OAAO,GAAG,SAAS,CAAC;AACxB,QAAI,KAAK,GAAG;AACV,OAAC,EAAE,CAAC;KACL,CAAC;AACF,QAAI,GAAG,GAAG,EAAE,CAAC;AACb,QAAI,MAAM,GAAG,KAAK,CAAC;AACnB,QAAI,GAAG,GAAG,SAAN,GAAG,CAAY,GAAG,EAAC;AACrB,SAAG,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;AAC1B,YAAM,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AAC3B,YAAM,GAAG,IAAI,CAAC;KACf,CAAC;AACF,cAAU,CAAC,KAAK,CAAC,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;;AAE9C,OAAG,CAAC,CAAC,GAAG,IAAI,CAAC;AACb,UAAM,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AAC1B,QAAI,EAAE,CAAC;GACR,CAAC,CAAC;CACJ,CAAC,CAAC","file":"field-compiled.js","sourcesContent":["var deprecated = require('../');\nvar should = require('should');\nrequire('mocha');\n\ndescribe('field()', function() {\n  it('should return a wrapped function that logs once on get', function(done) {\n    var message = 'testing';\n    var scope = {\n      a: 1\n    };\n    var obj = {};\n    var logged = false;\n    var log = function(msg){\n      msg.should.equal(message);\n      logged.should.equal(false);\n      logged = true;\n    };\n    deprecated.field(message, log, obj, 'a', 123);\n\n    obj.a.should.equal(123);\n    obj.a = 1234;\n    obj.a.should.equal(1234);\n    logged.should.equal(true);\n    done();\n  });\n  it('should return a wrapped function that logs once on set', function(done) {\n    var message = 'testing';\n    var scope = {\n      a: 1\n    };\n    var obj = {};\n    var logged = false;\n    var log = function(msg){\n      msg.should.equal(message);\n      logged.should.equal(false);\n      logged = true;\n    };\n    deprecated.field(message, log, obj, 'a', 123);\n\n    obj.a = 1234;\n    logged.should.equal(true);\n    done();\n  });\n});"]}