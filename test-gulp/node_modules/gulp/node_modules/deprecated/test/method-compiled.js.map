{"version":3,"sources":["method.js"],"names":[],"mappings":";;AAAA,IAAI,UAAU,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC;AAChC,IAAI,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC/B,OAAO,CAAC,OAAO,CAAC,CAAC;;AAEjB,QAAQ,CAAC,UAAU,EAAE,YAAW;AAC9B,IAAE,CAAC,iDAAiD,EAAE,UAAS,IAAI,EAAE;AACnE,QAAI,OAAO,GAAG,SAAS,CAAC;AACxB,QAAI,KAAK,GAAG;AACV,OAAC,EAAE,CAAC;KACL,CAAC;AACF,QAAI,MAAM,GAAG,KAAK,CAAC;AACnB,QAAI,GAAG,GAAG,SAAN,GAAG,CAAY,GAAG,EAAC;AACrB,SAAG,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;AAC1B,YAAM,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AAC3B,YAAM,GAAG,IAAI,CAAC;KACf,CAAC;AACF,QAAI,EAAE,GAAG,UAAU,CAAC,MAAM,CAAC,OAAO,EAAE,GAAG,EAAE,UAAS,GAAG,EAAE,GAAG,EAAC;AACzD,UAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AACzB,SAAG,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AACpB,SAAG,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AACpB,aAAO,GAAG,GAAC,GAAG,CAAC;KAChB,CAAC,CAAC;;AAEH,MAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AACpC,MAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AACpC,MAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AACpC,MAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;;AAEpC,UAAM,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AAC1B,QAAI,EAAE,CAAC;GACR,CAAC,CAAC;CACJ,CAAC,CAAC","file":"method-compiled.js","sourcesContent":["var deprecated = require('../');\nvar should = require('should');\nrequire('mocha');\n\ndescribe('method()', function() {\n  it('should return a wrapped function that logs once', function(done) {\n    var message = 'testing';\n    var scope = {\n      a: 1\n    };\n    var logged = false;\n    var log = function(msg){\n      msg.should.equal(message);\n      logged.should.equal(false);\n      logged = true;\n    };\n    var fn = deprecated.method(message, log, function(one, two){\n      this.should.equal(scope);\n      one.should.equal(1);\n      two.should.equal(2);\n      return one+two;\n    });\n\n    fn.bind(scope)(1,2).should.equal(3);\n    fn.bind(scope)(1,2).should.equal(3);\n    fn.bind(scope)(1,2).should.equal(3);\n    fn.bind(scope)(1,2).should.equal(3);\n\n    logged.should.equal(true);\n    done();\n  });\n});"]}